"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1477],{10:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"julyot-day12-embedded","metadata":{"permalink":"/blog/julyot-day12-embedded","source":"@site/blog/2022-07-12-embedded.md","title":"12: AI-powered predictive maintenance with Azure Sphere","description":"Welcome to Day 12 of #JulyOT!!","date":"2022-07-12T00:00:00.000Z","formattedDate":"July 12, 2022","tags":[{"label":"30days","permalink":"/blog/tags/30-days"},{"label":"iot","permalink":"/blog/tags/iot"},{"label":"iot4b","permalink":"/blog/tags/iot-4-b"},{"label":"embeddediot","permalink":"/blog/tags/embeddediot"}],"readingTime":3.085,"truncated":false,"authors":[{"name":"Dave Glover","title":"Senior Cloud Advocate @Microsoft","url":"https://github.com/gloveboxes","imageURL":"https://github.com/gloveboxes.png","key":"dave"}],"frontMatter":{"slug":"julyot-day12-embedded","title":"12: AI-powered predictive maintenance with Azure Sphere","authors":["dave"],"tags":["30days","iot","iot4b","embeddediot"],"draft":false},"nextItem":{"title":"11: Cohetes de agua - Water rockets!","permalink":"/blog/11-cohetes-de-agua"}},"content":"<head>\\n  <meta name=\\"twitter:url\\" content=\\"https://julyot.dev/blog/julyot-day12-embedded\\" />\\n  <meta name=\\"twitter:title\\" content=\\"AI-powered predictive maintenance with Azure Sphere\\" />\\n  <meta name=\\"twitter:description\\" content=\\"AI-powered predictive maintenance can help identify a faulty machine before a real problem occurs, reducing maintenance costs, improving availability and customer satisfaction\\" />\\n  <meta name=\\"twitter:image\\" content=\\"https://julyot.dev/img/png/JulyOT-banner-12-sphere.png\\" />\\n  <meta name=\\"twitter:card\\" content=\\"summary_large_image\\" />\\n  <meta name=\\"twitter:creator\\" content=\\"@dglover\\" />\\n  <meta name=\\"twitter:site\\" content=\\"@AzureAdvocates\\" />\\n  <link rel=\\"canonical\\" href=\\"https://julyot.dev/blog/julyot-day12-embedded\\" />\\n</head>\\n\\n> Welcome to Day 12 of **#JulyOT**!!\\n\\n![Post banner](/img/png/JulyOT-banner-12-sphere.png)\\n\\n_HVAC ([Heating, ventilation, and air conditioning](https://en.wikipedia.org/wiki/Heating,_ventilation,_and_air_conditioning)) units regulate our home and workplace environments. HVAC systems are ideal candidates for predictive maintenance, as they require regular costly maintenance._\\n\\n![HVAC System](https://upload.wikimedia.org/wikipedia/commons/9/90/Rooftop_Packaged_Units.JPG)\\n\\n## Watch the 10-minute end-to-end demonstration\\n\\n[![The image is the youtube thumbnail for the intro video](../static/img/png/predictive_maintenace_youtube.png)](https://youtu.be/62XKxzRld28)\\n\\n## Machine Learning on Embedded Hardware\\n\\nAI-powered predictive maintenance can help identify a faulty machine before a real problem occurs, reducing maintenance costs, improving availability and customer satisfaction. The advantages of predictive maintenance include:\\n\\n- Reduced carbon footprint. Keeping equipment running well has straightforward benefits for operating efficiency, but we should also ensure our processes are efficient. Fault monitoring can generate high volumes of low-value data. Sending this data to cloud systems consumes power and network resources. Running an ML model on embedded hardware consumes less electricity and network resources. Only predicted maintenance events get sent to the backend systems. Disabling network interfaces (for example, Wi-Fi) can further reduce power consumption until a high-value predictive maintenance event occurs.\\n- Access to better data for faster fault resolution.\\n- Low latency response to system faults. There are fault monitoring use cases that require immediate action to shut down a system. Sending fault monitoring data to cloud systems for processing might be too slow, further damaging the machine.\\n\\n## Predictive Maintenance on Azure Sphere\\n\\n![Image shows the Machine Learning Predictive Maintenance rig](../static/img/png/ml_predictive_maintenance_rig.jpeg)\\n\\n[Azure Sphere](https://azure.microsoft.com/services/azure-sphere) is a secure embedded platform that is ideal for quickly developing an IoT system. By providing a platform meeting all [7 properties of highly secured devices](https://www.microsoft.com/research/wp-content/uploads/2017/03/SevenPropertiesofHighlySecureDevices.pdf?wt.mc_id=eventspg_16482_webpage_reactor), Azure Sphere eliminates the need to be a hardware, OS, and security expert. These seven properties make Azure Sphere ideal for running and updating ML models. You don\u2019t want to solve one problem (equipment operation) and introduce a larger one (security).\\n\\nYou can deploy up to 3 custom apps on Azure Sphere, including two ML workloads on the low-power real-time cores. The predictive maintenance solution runs a continuous movement classification TinyML model on one of the Azure Sphere real-time cores. When the TinyML model detects movement, for example, a rattle, or a faulty motor bearing, an event is sent to the predictive maintenance app running on the high-level core. The predictive maintenance app then powers up the network connection and sends the event to Azure IoT Central. Azure IoT Central exports the predictive maintenance event to a Logic App, which generates a message destined for Microsoft Teams.\\n\\nThe beauty of this solution is that you are combining building blocks. You don\u2019t need to be a security expert, Azure Sphere has got you covered, Edge Impulse simplifies model development, and IoT Central, Logic Apps, and Microsoft Teams are low code offerings making it easier to pull everything together.\\n\\n![This image shows the predictive maintenance solution architecture](../static/img/png/predictive_maintenance_solution_architecture.png)\\n\\n## Building the TinyML model\\n\\nThe TinyML (TensorFlow Lite) model was built with [Edge Impulse](https://www.edgeimpulse.com/). Edge Impulse simplifies building machine learning models for embedded hardware such as Azure Sphere. The cloud service is designed for developers, so you don\u2019t need to be a data science guru. There are tools for ML training data acquisition, and wizards lead you through the process of training, testing, and exporting models. Learn more about Edge Impulse on their [getting started](https://docs.edgeimpulse.com/docs) page.\\n\\n## Get Started\\n\\nHead to the [AI-powered Predictive Maintenance](https://github.com/gloveboxes/AzureSphereMLPredictiveMaintenanceEW) repo to get started."},{"id":"11-cohetes-de-agua","metadata":{"permalink":"/blog/11-cohetes-de-agua","source":"@site/blog/2022-07-11-arduino-rockets.md","title":"11: Cohetes de agua - Water rockets!","description":"Welcome to Day 11 of #JulIoT!!","date":"2022-07-11T00:00:00.000Z","formattedDate":"July 11, 2022","tags":[{"label":"30days","permalink":"/blog/tags/30-days"},{"label":"iot","permalink":"/blog/tags/iot"},{"label":"iot4b","permalink":"/blog/tags/iot-4-b"},{"label":"juliot","permalink":"/blog/tags/juliot"}],"readingTime":3.915,"truncated":false,"authors":[{"name":"Francisco Dominguez","title":"Electrical Engineer and Project Manager, maker on IoT and other things in his spare time.","url":"https://github.com/fdominguezr","imageURL":"https://github.com/fdominguezr.png","key":"francisco"}],"frontMatter":{"slug":"11-cohetes-de-agua","title":"11: Cohetes de agua - Water rockets!","authors":["francisco"],"tags":["30days","iot","iot4b","juliot"],"draft":false},"prevItem":{"title":"12: AI-powered predictive maintenance with Azure Sphere","permalink":"/blog/julyot-day12-embedded"},"nextItem":{"title":"11: Learn Azure Percept from conference sessions","permalink":"/blog/11-azure-percept-conference-sessions"}},"content":"<head>\\n  <meta name=\\"twitter:url\\" content=\\"https://julyot.dev/blog/11-cohetes-de-agua\\" />\\n  <meta name=\\"twitter:title\\" content=\\"Cohetes de agua - Water rockets\\" />\\n  <meta name=\\"twitter:description\\" content=\\"Entra en la carrera espacial con Arduino y cohetes de agua.\\" />\\n  <meta name=\\"twitter:image\\" content=\\"https://julyot.dev/img/png/JulyOT-banner-11-cohetes-de-agua.png\\" />\\n  <meta name=\\"twitter:card\\" content=\\"summary_large_image\\" />\\n  <meta name=\\"twitter:creator\\" content=\\"@Franciscodr\\" />\\n  <meta name=\\"twitter:site\\" content=\\"@AzureAdvocates\\" /> \\n  <link rel=\\"canonical\\" href=\\"https://julyot.dev/blog/11-cohetes-de-agua\\" />\\n</head>\\n\\n> Welcome to Day 11 of **#JulIoT**!!\\n\\n![Welcome banner](/img/png/JulyOT-banner-11-cohetes-de-agua.png)\\n\\n_This year we are also celebrating #JulIoT - JulyOT in Spanish!_\\n\\n## Cohetes de agua\\n\\n\xbfQuieres ver o incluso entrar en la carrera espacial?\\nAhora puedes con los cohetes de agua autom\xe1ticos. Hasta 100 metros de altura, captura de datos y despliegue autom\xe1tico de paraca\xeddas con Arduino.\\n\\n### Tutorial c\xf3mo crear un cohete de agua sencillo\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/C5G8b00kDKo\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\nOs presento el tutorial de c\xf3mo hacer un cohete de agua sencillo. Incluye cohete y plataforma de lanzamiento. Suena complicado pero es f\xe1cil de hacer, volar y mantener.\\n\\nNo esperes que llegue muy alto, pero s\xed te asegurar\xe1 horas de diversi\xf3n mientras lo montas y luego vol\xe1ndolo. [Aqu\xed el v\xeddeo que me inspir\xf3 de Raketfued Rockets.](https://www.youtube.com/watch?v=i_W3VkJkZF0)\\n\\n[Y aqu\xed la lista de materiales traducida y con fotos de ejemplo para que se vea m\xe1s claro](https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbjJnMi0zcUVhaU9SSnlaTTQyeGFfOVJXRVpSUXxBQ3Jtc0tuTjJ2MlRUMm5pTEJCQ1NRWkpFLWo0WVF4OGRBdk1PWDhZNnpMUVh0REVrRmUwMGZGd2ptYV9zQ29xWGNBQmhJWGZzdS1wSExZME1RVXJDVFFoRzdYQWJtNG5wTU1TZF9TbldzbUg3UlV0QjdXdmpfZw&q=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2F12s2KHlCgusn7dC_QWjIeuUqwQCy3Kw05XQkTBkiW7DE%2Fedit%23gid%3D0&v=C5G8b00kDKo)\\n\\n[Tienes el instructable aqu\xed (en ingl\xe9s)](https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbHpUSnY3OXE5UmtBSDMyVk9zZHhyelRNalp2Z3xBQ3Jtc0traDZQcmNkYjkyaHdXaDdxOGgtM3FGbklqR3J2THNiUVFBQmFraDZMMUl1ZlNJY1FZYWh4ems5UWZ4Q25xNEFhMVRDNzdOZmVTc1pNa2VObW4xc1ZVRkNnTEpxZldxZmhXYzI1MWRKcWdRM0UtTDZzcw&q=https%3A%2F%2Fwww.instructables.com%2Fid%2FSimplified-Water-Rocket%2F&v=C5G8b00kDKo).\\n\\nOjo: vu\xe9lalo en un sitio despejado y d\xf3nde no haya gente. Si est\xe1s cerca mientras lo manejas hazlo con precauci\xf3n.\\n\\n### Videos from the water rocket (I) Oxford (UK)\\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/r3aAcTf5RU0\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\nFinally the rocket flies high, and I installed a camera onboard, so we can see more things.\\n\\n### Videos from a water rocket II. Oxford (UK)\\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/4GGwC14PO_k\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\nHere is the second part of the water rocket test!\\nWe\'ve got some progress on the electronics and new videos, don\'t miss them!\\n\\n### Automatic parachute for water rocket\\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/sznkx21Y2Eg\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\nFinally we have a parachute that works!\\nWell it only worked in 1 out of 4 attempts. Why? How is it working?\\nThe mechanism is very simple, with Arduino and a few components. I left everything explained in this video.\\n\\n### New automatic parachute system\\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/6DkI61BpZuc\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\n Here we have the new version of the water rocket, with all the secrets and improvements on:\\n- the launchpad, to avoid pressure leakage.\\n- The fins for a more straight flight.\\n- The automatic parachute system, more reliable and lighter.\\n- The navigation software, for a more accurate detection of launch, apogee, and data storage in the Arduino EEPROM.\\n\\n### Visita al Museo de la Ciencia de Londres. Cohetes\\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/xw_YkiJrFGs\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\nAqu\xed os traigo un mini tour por uno de los museos que m\xe1s me gustan: el Museo de la Ciencia de Londres.\\nNo es una pasada, sino lo siguiente!\\nMe centro especialmente en el apartado de cohetes porque es la parte que m\xe1s me gusta. \\nPero si te gusta la ciencia, la ingenier\xeda o simplemente curiosear c\xf3mo funcionan las cosas encontrar\xe1s de todo.\\nA ver, cosas pr\xe1cticas para saber:\\n- Entrada gratis. Piden donativo pero si no quieres no das. Recomiendo dar algo siempre para el mantenimiento del museo. Comprando cosas en su tienda, que es una pasada tambi\xe9n ayudas.\\n- Mejores horarios: en general primera hora (a las 10) o a \xfaltima hora (a las 16h). Cierran a las 18h. Te aconsejo mirar el horario en Google Maps porque te suele decir lo concurrido que est\xe1 en el momento que quieres ir.\\n- Tienes un simulador en la planta baja de las misiones Apolo que est\xe1 bien: se mueven los asientos y es 3D. En la \xfaltima planta tambi\xe9n hay simuladores chulos.\\n\\n### (One of the) First in the World landing gear for water rockets\\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/IzD6kzDOr1E\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\nFinally I could make it. This is a great advancement of a landing system for a water rocket.\\n(Thanks for your comments correcting me. If you did it before or in other way, please let me know. As you see I corrected the title too to be fair \ud83d\ude09 ).\\n\\nAs you can see there are already some progress like:\\n- the self deployed legs.\\n- the automatic mechanism, entirely design from scratch.\\n\\nI did already some reliability tests, with all the parts integrated.\\nNext steps are to connect the servo mechanism to the Arduino and program the system."},{"id":"11-azure-percept-conference-sessions","metadata":{"permalink":"/blog/11-azure-percept-conference-sessions","source":"@site/blog/2022-07-11-azure-percept-conference-sessions.md","title":"11: Learn Azure Percept from conference sessions","description":"Welcome to Day 11 of #JulyOT!","date":"2022-07-11T00:00:00.000Z","formattedDate":"July 11, 2022","tags":[{"label":"30days","permalink":"/blog/tags/30-days"},{"label":"iot","permalink":"/blog/tags/iot"},{"label":"aiatedge","permalink":"/blog/tags/aiatedge"}],"readingTime":4.4,"truncated":false,"authors":[{"name":"Amira Youssef","title":"Principal PM Manager @Microsoft","url":"https://github.com/Amiyouss","imageURL":"https://pbs.twimg.com/profile_images/1426589231422480385/OzZty9cq_400x400.jpg","key":"amira"}],"frontMatter":{"slug":"11-azure-percept-conference-sessions","title":"11: Learn Azure Percept from conference sessions","authors":["amira"],"tags":["30days","iot","aiatedge"],"draft":false},"prevItem":{"title":"11: Cohetes de agua - Water rockets!","permalink":"/blog/11-cohetes-de-agua"},"nextItem":{"title":"09: Getting Started with Microsoft Azure and CircuitPython","permalink":"/blog/09-azure-circuit-python"}},"content":"<head>\\n  <meta name=\\"twitter:url\\" content=\\"https://julyot.dev/blog/11-azure-percept-conference-sessions\\" />\\n  <meta name=\\"twitter:title\\" content=\\"Learn Azure Percept from conference sessions\\" />\\n  <meta name=\\"twitter:description\\" content=\\"Learn Azure Percept from conference sessions\\" />\\n  <meta name=\\"twitter:image\\" content=\\"https://julyot.dev/img/png/JulyOT-banner-11-azure-percept-conference-sessions.png\\" />\\n  <meta name=\\"twitter:card\\" content=\\"summary_large_image\\" />\\n  <meta name=\\"twitter:creator\\" content=\\"@Amiyouss1\\" />\\n  <meta name=\\"twitter:site\\" content=\\"@AzureAdvocates\\" /> \\n  <link rel=\\"canonical\\" href=\\"https://julyot.dev/blog/11-azure-percept-conference-sessions\\" />\\n</head>\\n\\n> Welcome to Day 11 of **#JulyOT**!\\n\\n![Page banner](/img/png/JulyOT-banner-11-azure-percept-conference-sessions.png)\\n\\n_Today we learn more about Azure Percept._\\n\\n# Learn Azure Percept from conference sessions\\n\\nAzure Percept is a comprehensive, easy-to-use platform with added security for creating edge AI solutions. Start your proof of concept in minutes with hardware accelerators built to integrate seamlessly with Azure AI and Azure IoT services. Azure Percept works out of the box with Azure Cognitive Services, Azure Machine Learning, and other Azure services to deliver vision and audio insights in real time.\\n\\nTo help you learn more about Azure Percept, we\'ve curated a set of recorded sessions and blog posts from 3 different conferences.\\n\\n## Microsoft Build 2022\\n\\n### Microsoft Build Into Focus: Preparing for the metaverse\\n\\nThe metaverse is an emerging concept and there are many questions around what it is, and what can companies do with it? In this session, we\'ll invite a panel of industry experts from Microsoft to share their perspectives on the metaverse, how enterprises can benefit from metaverse experiences, and how to leverage current technologies to get started.\\n\\n[![Into focus Metaverse video](/img/png/build-into-focus-metaverse.png)](https://mybuild.microsoft.com/sessions/545e4d7d-152c-4f1a-8f32-5e7519098dbb?wt.mc_id=eventspg_16482_webpage_reactor)\\n\\n### Embrace digital transformation at the edge with Azure Percept\\n\\nDiscover how to accelerate edge AI with Azure Percept and Azure Stack HCI, and other Azure services that simplify AI and machine learning training and deployment at scale. Also get a glimpse of what\u2019s to come next with edge AI and internet-of-things innovation from Azure Percept.\\n\\n[![Embrace digital transformation video](/img/png/build-embrace-transformation.png)](https://mybuild.microsoft.com/sessions/f40fdc70-648a-4353-b483-cdf763b16c2f?wt.mc_id=eventspg_16482_webpage_reactor)\\n\\n## NVIDIA GTC Spring 2022\\n\\n### Transforming AI and ML at the Edge with Microsoft and NVIDIA (Presented by Microsoft Azure)\\n\\nNVIDIA and Microsoft are working together to transform AI and machine learning, leveraging the power of the GPU at the edge combined with Azure AI services. Discover how to accelerate edge AI with Azure Percept and Azure Stack HCI, and other Azure services that simplify AI and machine learning training and deployment at scale, as well as making it more accessible to non-developers and data scientists. Also get a glimpse of what\u2019s to come next with edge AI and internet-of-things innovation from Microsoft. Watch this session for a chance to be entered to win a special SWAG Box sponsored by Microsoft and NVIDIA.\\n\\n[![NVIDIA transforming AI at the edge video](/img/png/nvidia-transforming-ai-edge.png)](https://www.nvidia.com/on-demand/session/gtcspring22-s42525/)\\n\\n### Embrace digital transformation at the edge with Azure Percept\\n\\nRight now, a paradigm shift is underway. Customers are increasingly investing in artificial intelligence (AI) and machine learning (ML) at the edge to transform business operations, deploying intelligent devices that will generate more data in the next three years than in the past 30 years combined.\\n\\nLearn more in [this blog post](https://techcommunity.microsoft.com/t5/internet-of-things-blog/embrace-digital-transformation-at-the-edge-with-azure-percept/ba-p/3261300?wt.mc_id=eventspg_16482_webpage_reactor).\\n\\n[![Azure percept overview](https://techcommunity.microsoft.com/t5/image/serverpage/image-id/357015iAAA87FD555D8FEC3/image-dimensions/701x394?v=v2)](https://techcommunity.microsoft.com/t5/internet-of-things-blog/embrace-digital-transformation-at-the-edge-with-azure-percept/ba-p/3261300?wt.mc_id=eventspg_16482_webpage_reactor)\\n\\n## Microsoft Ignite 2021\\n\\n### Automate Your Operations with Edge AI\\n\\nAutomating your operations doesn\u2019t need to be a challenge\u2014and it\u2019s something you can do today. Join this session with NVIDIA and Microsoft to discover how you can use Edge AI for your automation needs. We will provide a behind-the-scenes look at the technology making it all possible, including Microsoft Azure Percept and Azure Stack HCI. Select partners and solution providers will also join us to share more about the innovative hardware that you can run in your edge location.\\n\\n[![Automate Your Operations video](/img/png/ignite-automate-operations.png)](https://myignite.microsoft.com/sessions/dfc3448c-4048-4f15-b8f4-86c0f1a76684?wt.mc_id=eventspg_16482_webpage_reactor)\\n\\n### Microsoft and NVIDIA partner to accelerate edge AI deployment\\n\\nIn a journey to understand the typical edge AI deployment journey, Microsoft spoke to over 500 customers and partners about their biggest barriers to entry. We heard about complexities when trying to scale, no end-to-end solution platforms, even security concerns. With these findings in mind, we released Azure Percept DK to public preview in Spring 2021. It\'s now [available to customers in 16 markets](https://techcommunity.microsoft.com/t5/internet-of-things/azure-percept-dk-and-azure-percept-audio-now-available-in-more/ba-p/2712969?wt.mc_id=eventspg_16482_webpage_reactor) around the world.\\n\\nLearn more in [this blog post](https://techcommunity.microsoft.com/t5/internet-of-things-blog/microsoft-and-nvidia-partner-to-accelerate-edge-ai-deployment/ba-p/2897307?wt.mc_id=eventspg_16482_webpage_reactor).\\n\\n[![Microsoft and NVIDIA partner to accelerate edge AI deployment](https://techcommunity.microsoft.com/t5/image/serverpage/image-id/321596i1E16377022E488B2/image-size/large?v=v2&px=999)](https://techcommunity.microsoft.com/t5/internet-of-things/azure-percept-dk-and-azure-percept-audio-now-available-in-more/ba-p/2712969?wt.mc_id=eventspg_16482_webpage_reactor)\\n\\n### Time to Ignite: NVIDIA Works With Microsoft to Bolster GPU-Accelerated Edge AI and Visualization\\n\\nExplore how the companies\u2019 AI solutions deliver breakthroughs across industries, at Microsoft Ignite 2021.\\n\\nLearn more in [this blog post](https://blogs.nvidia.com/blog/2021/10/28/nvidia-at-microsoft-ignite/).\\n\\n[![NVIDIA Works With Microsoft to Bolster GPU-Accelerated Edge AI and Visualization](https://blogs.nvidia.com/wp-content/uploads/2021/10/microsoft-ignite-rollup-1280x680-1.jpg)](https://blogs.nvidia.com/blog/2021/10/28/nvidia-at-microsoft-ignite/)\\n\\n### Discover how DataRobot & Microsoft deliver more connected AI solutions at scale\\n\\nTo realize the full potential of AI, organizations need to bring together teams, unify data and operate, at scale, across all environments - from the cloud, to the data center, to the edge. Together, DataRobot AI Cloud and Microsoft can deliver this next generation of AI. Learn how you can run DataRobot AI Cloud platform on Azure, harness the power of AI at the edge with Azure Percept, and soon, drive real-time collaboration between data scientists and data managers on Teams.\\n\\n[![Discover how DataRobot & Microsoft deliver more connected AI solutions video](/img/png/ignite-datarobot-microsoft.png)](https://myignite.microsoft.com/sessions/163fd807-58d7-492f-b9e6-a6882397e0fb?wt.mc_id=eventspg_16482_webpage_reactor)\\n\\n### Deliver More Connected, Intelligent AI Solutions at Scale with Microsoft and DataRobot AI Cloud\\n\\nAt this year\u2019s Microsoft Ignite event, DataRobot is thrilled to join forces with Microsoft to bring organizations better AI-enabled experiences that deliver world-class customer experience and impactful business results.\\n\\nLearn more in [this blog post](https://www.datarobot.com/blog/intelligent-ai-solutions-at-scale-with-microsoft-and-datarobot-ai-cloud/).\\n\\n[![Discover how DataRobot & Microsoft deliver more connected AI solutions video](/img/png/ignite-datarobot-microsoft.png)](https://www.datarobot.com/blog/intelligent-ai-solutions-at-scale-with-microsoft-and-datarobot-ai-cloud/)"},{"id":"09-azure-circuit-python","metadata":{"permalink":"/blog/09-azure-circuit-python","source":"@site/blog/2022-07-09-azure-circuit-python.mdx","title":"09: Getting Started with Microsoft Azure and CircuitPython","description":"Welcome to Day 9 of #JulyOT!","date":"2022-07-09T00:00:00.000Z","formattedDate":"July 9, 2022","tags":[{"label":"30days","permalink":"/blog/tags/30-days"},{"label":"iot","permalink":"/blog/tags/iot"},{"label":"iot4b","permalink":"/blog/tags/iot-4-b"}],"readingTime":0.85,"truncated":false,"authors":[{"name":"Jen Fox","title":"Senior Program Manager @Microsoft","url":"https://github.com/jenfoxbot","imageURL":"https://pbs.twimg.com/profile_images/1251933030194704385/bFUIbxQ-_400x400.jpg","key":"jen"}],"frontMatter":{"slug":"09-azure-circuit-python","title":"09: Getting Started with Microsoft Azure and CircuitPython","authors":["jen"],"tags":["30days","iot","iot4b"],"draft":false},"prevItem":{"title":"11: Learn Azure Percept from conference sessions","permalink":"/blog/11-azure-percept-conference-sessions"},"nextItem":{"title":"08: IoT for Beginners lesson 2!","permalink":"/blog/08-julyot-iot-beginners"}},"content":"<head>\\n  <meta name=\\"twitter:url\\" content=\\"https://julyot.dev/blog/09-azure-circuit-python\\" />\\n  <meta name=\\"twitter:title\\" content=\\"Getting Started with Microsoft Azure and CircuitPython\\" />\\n  <meta name=\\"twitter:description\\" content=\\"Getting Started with Microsoft Azure and CircuitPython\\" />\\n  <meta name=\\"twitter:image\\" content=\\"https://julyot.dev/img/png/JulyOT-banner-9-azure-circuitpython.png\\" />\\n  <meta name=\\"twitter:card\\" content=\\"summary_large_image\\" />\\n  <meta name=\\"twitter:creator\\" content=\\"@ellerbach\\" />\\n  <meta name=\\"twitter:site\\" content=\\"@AzureAdvocates\\" /> \\n  <link rel=\\"canonical\\" href=\\"https://julyot.dev/blog/09-azure-circuit-python\\" />\\n</head>\\n\\n> Welcome to Day 9 of **#JulyOT**!\\n\\n![Page banner](/img/png/JulyOT-banner-9-azure-circuitpython.png)\\n\\n_Today we learn about using Azure IoT with Circuit Python._\\n\\n## Getting Started with Microsoft Azure and CircuitPython\\n\\nLearn how to use Microsoft Azure IoT with CircuitPython! If you are an embedded developer who loves CircuitPython and want to connect to the cloud, then [this guide on the Adafruit Learn platform](https://learn.adafruit.com/getting-started-with-microsoft-azure-and-circuitpython) is for you.\\n\\nThis guide will walk you through how to get started with Microsoft Azure using a Feather ESP32-S2 TFT and a BME688 sensor to monitor temperature, humidity and air pressure. The data is logged to Microsoft Azure every fifteen minutes and can be viewed on a dashboard.\\n\\n<form action=\\"https://learn.adafruit.com/getting-started-with-microsoft-azure-and-circuitpython\\" target=\\"_blank\\">\\n    <input type=\\"submit\\" value=\\"Take me to the guide\\" class=\\"clean-btn button button--primary margin-left--md\\"/>\\n</form>"},{"id":"08-julyot-iot-beginners","metadata":{"permalink":"/blog/08-julyot-iot-beginners","source":"@site/blog/2022-07-08-iot-beginners.mdx","title":"08: IoT for Beginners lesson 2!","description":"Welcome to Day 8 of #JulyOT!!","date":"2022-07-08T00:00:00.000Z","formattedDate":"July 8, 2022","tags":[{"label":"30days","permalink":"/blog/tags/30-days"},{"label":"iot","permalink":"/blog/tags/iot"},{"label":"iot4b","permalink":"/blog/tags/iot-4-b"}],"readingTime":1.005,"truncated":false,"authors":[{"name":"Jim Bennett","title":"Senior Regional Cloud Advocate @Microsoft","url":"https://github.com/jimbobbennett","imageURL":"https://github.com/jimbobbennett.png","key":"jimb"}],"frontMatter":{"slug":"08-julyot-iot-beginners","title":"08: IoT for Beginners lesson 2!","authors":["jimb"],"tags":["30days","iot","iot4b"],"draft":false},"prevItem":{"title":"09: Getting Started with Microsoft Azure and CircuitPython","permalink":"/blog/09-azure-circuit-python"},"nextItem":{"title":"08: .NET nanoFramework GPIO, I2C, SPI and other IO support","permalink":"/blog/08-nano-framework"}},"content":"<head>\\n  <meta name=\\"twitter:url\\" content=\\"https://julyot.dev/blog/08-julyot-iot-beginners\\" />\\n  <meta name=\\"twitter:title\\" content=\\"IoT for Beginners lesson 2\\" />\\n  <meta name=\\"twitter:description\\" content=\\"Join us for a deeper dive into IoT devices as part of our live streamed IoT for Beginners lessons\\" />\\n  <meta name=\\"twitter:image\\" content=\\"https://julyot.dev/img/png/JulyOT-banner-8-iot-beginners.png\\" />\\n  <meta name=\\"twitter:card\\" content=\\"summary_large_image\\" />\\n  <meta name=\\"twitter:creator\\" content=\\"@jimbobbennett\\" />\\n  <meta name=\\"twitter:site\\" content=\\"@AzureAdvocates\\" /> \\n  <link rel=\\"canonical\\" href=\\"https://julyot.dev/blog/08-julyot-iot-beginners\\" />\\n</head>\\n\\n> Welcome to Day 8 of **#JulyOT**!!\\n\\n![Welcome banner](/img/png/JulyOT-banner-8-iot-beginners.png)\\n\\n_Today we live stream lesson 2 of IoT for Beginners - a deeper dive into IoT._\\n\\n## IoT For Beginners\\n\\n[IoT for beginners](https://aka.ms/iot-beginners) is a free, open source, 24-lesson IoT curriculum. The second lesson is live-streamed today from the Microsoft Reactor. Watch it live at 9am Pacific Time, or catch the recording on the Microsoft Reactor YouTube channel.\\n\\n<a href=\'https://www.meetup.com/Microsoft-Reactor-Redmond/events/286453697/\'>\\n<img src=\'https://www.meetup.com/_next/image/?url=https%3A%2F%2Fsecure-content.meetupstatic.com%2Fimages%2Fclassic-events%2F504717148%2F676x380.webp&w=3840&q=75\'  alt=\'IoT for beginners - Lesson 2, A deeper dive into IoT, Friday July 8th, 9am Pacific Time\'/>\\n</a>&nbsp;\\n\\n<table>\\n<tr style={{border:\'0px\', \'background-color\':\'#00000000\'}}>\\n    <td style={{border:\'0px\', \'text-align\': \'center\'}}>\\n        <form action=\\"https://www.meetup.com/Microsoft-Reactor-Redmond/events/286453697\\" target=\\"_blank\\">\\n            <input type=\\"submit\\" value=\\"Register on MeetUp\\" class=\\"clean-btn button button--primary margin-left--md\\"/>\\n        </form>\\n    </td>\\n    <td style={{border:\'0px\', \'text-align\': \'center\'}}>\\n        <form action=\\"https://aka.ms/IoTforbeginnersLess2\\" target=\\"_blank\\">\\n            <input type=\\"submit\\" value=\\"Watch on YouTube\\" class=\\"clean-btn button button--secondary margin-left--md\\"/>\\n        </form>\\n    </td>\\n</tr>\\n</table>\\n\\nLearn more about IoT for Beginners on the official [IoT for Beginners GitHub repo](https://aka.ms/iot-beginners)."},{"id":"08-nano-framework","metadata":{"permalink":"/blog/08-nano-framework","source":"@site/blog/2022-07-08-nano-framework.md","title":"08: .NET nanoFramework GPIO, I2C, SPI and other IO support","description":"Welcome to Day 8 of #JulyOT!","date":"2022-07-08T00:00:00.000Z","formattedDate":"July 8, 2022","tags":[{"label":"30days","permalink":"/blog/tags/30-days"},{"label":"iot","permalink":"/blog/tags/iot"},{"label":"embeddediot","permalink":"/blog/tags/embeddediot"}],"readingTime":10.33,"truncated":false,"authors":[{"name":"Laurent Ellerbach","title":"Principal Engineering Manager @Microsoft","url":"https://github.com/ellerbach","imageURL":"https://github.com/ellerbach.png","key":"laurent"},{"name":"Jos\xe9 Sim\xf5es","title":"CEO @Eclo Solutions","url":"https://github.com/josesimoes","imageURL":"https://github.com/josesimoes.png","key":"jose"}],"frontMatter":{"slug":"08-nano-framework","title":"08: .NET nanoFramework GPIO, I2C, SPI and other IO support","authors":["laurent","jose"],"tags":["30days","iot","embeddediot"],"draft":false},"prevItem":{"title":"08: IoT for Beginners lesson 2!","permalink":"/blog/08-julyot-iot-beginners"},"nextItem":{"title":"07: A Closed Captioning Example on Raspberry Pi using Azure Cognitive services","permalink":"/blog/07-closed-captioning-rpi"}},"content":"<head>\\n  <meta name=\\"twitter:url\\" content=\\"https://julyot.dev/blog/08-nano-framework\\" />\\n  <meta name=\\"twitter:title\\" content=\\".NET nanoFramework GPIO, I2C, SPI and other IO support\\" />\\n  <meta name=\\"twitter:description\\" content=\\".NET nanoFramework GPIO, I2C, SPI and other IO support\\" />\\n  <meta name=\\"twitter:image\\" content=\\"https://julyot.dev/img/png/JulyOT-banner-8-nanoframework.png\\" />\\n  <meta name=\\"twitter:card\\" content=\\"summary_large_image\\" />\\n  <meta name=\\"twitter:creator\\" content=\\"@ellerbach\\" />\\n  <meta name=\\"twitter:site\\" content=\\"@AzureAdvocates\\" /> \\n  <link rel=\\"canonical\\" href=\\"https://julyot.dev/blog/08-nano-framework\\" />\\n</head>\\n\\n> Welcome to Day 8 of **#JulyOT**!\\n\\n![Page banner](/img/png/JulyOT-banner-8-nanoframework.png)\\n\\n# GPIO, I2C, SPI, PWM, ADC, DAC, Serial and more!\\n\\n .NET nanoFramework has support for GPIO, I2C, SPI, PWM, ADC, DAC, Serial, 1-Wire. Also the API are aligned with [.NET IoT](https://github.com/dotnet/iot/) making it easy for code reuse between development on a Raspberry Pi with .NET 6.0 and an MCU running .NET nanoFramework.\\n\\n A comparison on how to reuse code and the differences between .NET IoT and .NET nanoFramework is available [here](https://github.com/dotnet/samples/tree/main/iot/dotnet-iot-and-nanoframework).\\n\\n There are dedicated classes with detailed documentation and samples for each of them:\\n\\n - General Purpose Input and Output (GPIO): [System.Device.Gpio](https://github.com/nanoframework/System.Device.Gpio) and associated documentation for the [class library](https://docs.nanoframework.net/api/System.Device.Gpio.html)\\n\\n     And a code snipet to blink a led:\\n\\n     ```csharp\\n     // Creates a GPIO controller\\n     GpioController controller = new();\\n     // Open the pin\\n     GpioPin led = controller.OpenPin(12, PinMode.Output);\\n     // Change the value of the pin. Equivalent code as the next line: controller.Write(12, PinValue.Low)\\n     led.Write(PinValue.Low);\\n     while (true)\\n     {\\n         // Toggle the value of the pin\\n         led.Toggle();\\n         Thread.Sleep(125);\\n     }\\n     ```\\n\\n     [Blink your first led](https://github.com/nanoframework/Samples/blob/main/samples/Blinky)! [GPIO sample pack](https://github.com/nanoframework/Samples/blob/main/samples/Gpio) including event management.\\n\\n - Serial Peripheral Interface (SPI): [System.Device.Spi](https://github.com/nanoframework/System.Device.Spi)and associated document for the [class library](https://docs.nanoframework.net/api/System.Device.Spi.html)\\n\\n     To create a SpiDevice, you need to follow this pattern:\\n\\n     ```csharp\\n     SpiDevice spiDevice;\\n     SpiConnectionSettings connectionSettings;\\n     // Note: the ChipSelect pin should be adjusted to your device, here 12\\n     // You can adjust as well the bus, here 1 for SPI1\\n     connectionSettings = new SpiConnectionSettings(1, 12);\\n     spiDevice = SpiDevice.Create(connectionSettings);\\n     ```\\n\\n     You can write a SpanByte like this:\\n\\n     ```csharp\\n     SpanByte writeBuffer = new byte[2] { 42, 84 };\\n     spiDevice.Write(writeBuffer);\\n     ```\\n\\n     You can write a ushort array like this:\\n\\n     ```csharp\\n     ushort[] writeBuffer = new ushort[2] { 4200, 8432 };\\n     spiDevice.Write(writeBuffer);\\n     ```\\n\\n     You can write single bytes:\\n     ```csharp\\n     spiDevice.WriteByte(42);\\n     ```\\n\\n     Read operations are similar:\\n\\n     ```csharp\\n     SpanByte readBuffer = new byte[2];\\n     // This will read 2 bytes\\n     spiDevice.Read(readBuffer);\\n     ushort[] readUshort = new ushort[4];\\n     // This will read 4 ushort\\n     spiDevice.Read(readUshort);\\n     // read 1 byte\\n     byte readMe = spiDevice.ReadByte();\\n     ```\\n\\n     For full transfer, you need to have 2 arrays of the same size and perform a full duplex transfer:\\n\\n     ```csharp\\n     SpanByte writeBuffer = new byte[4] { 0xAA, 0xBB, 0xCC, 0x42 };\\n     SpanByte readBuffer = new byte[4];\\n     spiDevice.TransferFullDuplex(writeBuffer, readBuffer);\\n     // Same for ushirt arrays:\\n     ushort[] writeBuffer = new ushort[4] { 0xAABC, 0x00BB, 0xCC00, 0x4242 };\\n     ushort[] readBuffer = new ushort[4];\\n     spiDevice.TransferFullDuplex(writeBuffer, readBuffer);\\n     ```\\n\\n     More [System.Device.Spi samples](https://github.com/nanoframework/Samples/blob/main/samples/SPI).\\n\\n - Inter-Integrated Circuit (I2C): [System.Device.I2c](https://github.com/nanoframework/System.Device.I2c) and associated document for the [class library](https://docs.nanoframework.net/api/System.Device.I2c.html)\\n\\n     Here is a short example on how to use I2C:\\n\\n     ```csharp\\n     // In this case we are opening the bus 1 and the device address 0x42\\n     I2cDevice i2c = new(new I2cConnectionSettings(1, 0x42));\\n     // We write a byte, in this case 0x07, we can write a SpanByte as well\\n     var res = i2c.WriteByte(0x07);\\n     // A successfull write will be: 0x10 Write: 1, transferred: 1\\n     // A non successful one: 0x0F Write: 4, transferred: 0\\n     Debug.Write($\\"0x{i:X2} Write: {res.Status}, transferred: {res.BytesTransferred}\\");\\n     // We\'re now trying to read 2 bytes\\n     SpanByte span = new byte[2];\\n     res = i2c.Read(span);\\n     // A successfull write will be: Read: 1, transferred: 1\\n     // A non successfull one: Read: 2, transferred: 0\\n     Debug.WriteLine($\\", Read: {res.Status}, transferred: {res.BytesTransferred}\\");\\n     ```\\n\\n     [I2C sample sample pack](https://github.com/nanoframework/Samples/blob/main/samples/I2C) containing as well [I2C GPS sample](https://github.com/nanoframework/Samples/blob/main/samples/I2C/System.Device.I2c/GPS) and an [I2C Scanner sample](https://github.com/nanoframework/Samples/blob/main/samples/I2C/NanoI2cScanner).\\n\\n - Digital-to-analog converter (DAC): [System.Device.Dac](https://github.com/nanoframework/System.Device.Dac) and associated document for the [class library](https://docs.nanoframework.net/api/System.Device.Dac.html)\\n\\n     A simple example for DAC is to create a specific sinus wave for example:\\n\\n     ```csharp\\n     // Gets the controller\\n     DacController dac = DacController.GetDefault();\\n     // Open channel 0\\n     DacChannel dacChannel = dac.OpenChannel(0);\\n     // Gete DAC resolution\\n     dacResolution = dac.ResolutionInBits;\\n\\n     int upperValue, midRange;\\n     double radian = 0;\\n     // Gets upper value from DAC resolution\\n     upperValue = (int)Math.Pow(2.0, dacResolution);\\n\\n     // compute a reasonable increment value from the resolution\\n     float increment = maxRads / (dacResolution * 10);\\n     midRange = upperValue / 2;\\n\\n     while(true)\\n     {\\n         // because the DAC can\'t output negative values\\n         // we have to offset the sine wave to half the DAC output range\\n         uint value = (uint)((Math.Sin(radian) * (midRange - 1)) + midRange);\\n         //Output the current value to console when in debug.\\n         Debug.WriteLine($\\"DAC SineWave output current value: {value}\\");\\n         // output to DAC\\n         channel.WriteValue((ushort)value);\\n         // increment angle\\n         radian += increment;\\n         if (radian >= maxRads)\\n         {\\n             // tweak the value so it doesn\'t overflow the DAC\\n             radian = 0;\\n         }\\n\\n         // Wait 5 milliseconds before the next point\\n         Thread.Sleep(5);\\n     }\\n     ```\\n\\n     [Digital Analog Converter samples](https://github.com/nanoframework/Samples/blob/main/samples/DAC).\\n\\n - Analog-to-digital converter (ADC): [System.Device.Adc](https://github.com/nanoframework/System.Device.Adc) and associated document for the [class library](https://docs.nanoframework.net/api/System.Device.Adc.html)\\n\\n     Each target device has an ADC Controller. To read a channel, first, instantiate the ADC controller and open the channel you want to read from. To read the raw value from an ADC channel, it\'s a simple matter of calling the Read() method on an open channel.\\n\\n     ```csharp\\n     AdcController adc1 = new AdcController();\\n     AdcChannel channel0 = adc1.OpenChannel(0);\\n     int myAdcRawvalue = channel0.ReadValue();\\n     ```\\n\\n     To find details about the ADC controller, query the ADC controller properties, like this.\\n\\n     ```csharp\\n     // get maximum raw value from the ADC controller\\n     int max1 = adc1.MaxValue;\\n     // get minimum raw value from the ADC controller\\n     int min1 = adc1.MinValue;\\n     // find how many channels are available \\n     int channelCount = adc1.ChannelCount;\\n     // resolution provided by the ADC controller\\n     int adcResolution = adc1.ResolutionInBits;\\n     ```\\n\\n     [Analogic/Digital converter sample](https://github.com/nanoframework/Samples/blob/main/samples/ADC).\\n\\n - Pulse-width Modulation (PWM): [System.Device.Pwm](https://github.com/nanoframework/System.Device.Pwm) and associated document for the [class library](https://docs.nanoframework.net/api/System.Device.Pwm.html)\\n\\n     You can create a PWM channel from a pin number. For an ESP32 device, allocate the pin, for an STM32 device ensure the selected pin is PWM enabled.\\n\\n     ```csharp\\n     // Case of ESP32, you need to set the pin function, in this example PWM3 for pin 18:\\n     Configuration.SetPinFunction(18, DeviceFunction.PWM3);\\n     PwmChannel pwmPin = PwmChannel.CreateFromPin(18, 40000);\\n     // You can check then if it has created a valid one:\\n     if (pwmPin != null)\\n     {\\n         // You do have a valid one\\n     }\\n     ```\\n\\n     You can adjust the duty cycle by using the property:\\n\\n     ```csharp\\n     pwmPin.DutyCycle = 0.42;\\n     ```\\n\\n     The duty cycle goes from 0.0 to 1.0.\\n\\n     It is recommended to set the frequency when creating the PWM Channel. You can technically change it at any time but keep in mind some platforms may not behave properly when adjusting this element.\\n\\n     Alternatively, if you know the chip/timer Id and the channel then follow this example:\\n\\n     ```csharp\\n     PwmChannel pwmPin = new(1, 2, 40000, 0.5);\\n     ```\\n\\n     More on [System.Device.Pwm sample](https://github.com/nanoframework/Samples/blob/main/samples/PWM/System.Device.Pwm).\\n\\n - Serial Port: [System.IO.Ports](https://github.com/nanoframework/System.IO.Ports)and associated documentation for the [class library](https://docs.nanoframework.net/api/System.IO.Ports.html)\\n\\n     Serial ports are often used to communicate with sensors. The `SerialPort` must be first opened before it can be used. The serial port can also be closed, when the serial port is disposed, the `SerialPort` will perform the close operation regardless of any ongoing receive or transmit operations.\\n\\n     ```csharp\\n     // You can specify baud rate, parity, bit stops and number of bits as well:\\n     var port = new SerialPort(\\"COM2\\");\\n     port.Open();\\n     // Do a lot of things here, write, read\\n     port.Close();\\n     ```\\n\\n     There are functions to read and write, some are byte related, others string related. Note that string functions will use UTF8 `Encoding` charset.\\n\\n     Example of sending and reading byte arrays:\\n\\n     ```csharp\\n     byte[] toSend = new byte[] { 0x42, 0xAA, 0x11, 0x00 };\\n     byte[] toReceive = new byte[50];\\n     // this will send the 4 bytes:\\n     port.Write(toSend, 0, toSend.Length);\\n     // This will only send the bytes AA and 11:\\n     port.Write(toSend, 1, 2);\\n     // This will check then number of available bytes to read\\n     var numBytesToRead = port.BytesToRead;\\n     // This will read 50 characters:\\n     port.Read(toReceive, 0, toReceive.Length);\\n     // this will read 10 characters and place them at the offset position 3:\\n     port.Read(toReceive, 3, 10);\\n     // Note: in case of time out while reading or writing, you will receive a TimeoutException\\n     // And you can as well read a single byte:\\n     byte oneByte = port.ReadByte();\\n     ```\\n\\n     Sending and receiving string example:\\n\\n     ```csharp\\n     string toSend = \\"I \u2764 nanoFramework\\";\\n     port.WriteLine(toSend);\\n     // this will send the string encoded finishing by a new line, by default `\\\\n`\\n     // You can change the new line to be anything:\\n     port.NewLine = \\"\u2764\u2764\\";\\n     // Now it will send 2 hearts as the line ending `WriteLine` and will use 2 hearts as the terminator for `ReadLine`.\\n     // You can change it back to the `\\\\n` default at anytime:\\n     port.NewLine = SerialPort.DefaultNewLine; // default is \\"\\\\n\\"\\n     // This will read the existing buffer:\\n     string existingString = port.ReadExisting();\\n     // Note that if it can\'t properly convert the bytes to a string, you\'ll get an exception\\n     // This will read a full line, it has to be terminated by the NewLine string.\\n     // If nothing is found ending by the NewLine in the ReadTimeout time frame, a TimeoutException will be raised.\\n     string aFullLine = port.ReadLine();\\n     ```\\n\\n     SerialPort supports events when characters are received.\\n\\n     ```csharp\\n         // Subscribe to the event\\n         port.DataReceived += DataReceivedNormalEvent;\\n\\n         // When you\'re done, you can as well unsubscribe\\n         port.DataReceived -= DataReceivedNormalEvent;\\n\\n     private void DataReceivedNormalEvent(object sender, SerialDataReceivedEventArgs e)\\n     {\\n         var ser = (SerialPort)sender;\\n         // Now you can check how many characters are available, read a line for example\\n         var numBytesToRead = port.BytesToRead;\\n         string aFullLine = ser.ReadLine();\\n     }\\n     ```\\n\\n     There are more supported. Check it in the [System.IO.Ports serial Communication sample](https://github.com/nanoframework/Samples/blob/main/samples/SerialCommunication).\\n\\n - One Wire or 1-Wire: [nanoFramework.Device.OneWire](https://github.com/nanoframework/nanoFramework.Device.OneWire) and associated document for the [class library](https://docs.nanoframework.net/api/nanoFramework.Device.OneWire.html)\\n\\n     To connect to a 1-Wire bus, first, instantiate an OneWireHost object, then perform operations with the connected devices.\\n\\n     ```csharp\\n     OneWireHost _OneWireHost = new OneWireHost();\\n     ```\\n\\n     To find the first device connected to the 1-Wire bus, and perform a reset on the bus before performing the search, call the `FindFirstDevice` method:\\n\\n     ```csharp\\n     _OneWireHost.FindFirstDevice(true, false);\\n     ```\\n\\n     To write a byte with the value 0x44 to the connected device:\\n\\n     ```csharp\\n     _OneWireHost.WriteByte(0x44);\\n     ```\\n\\n     To get a list with the serial number of all the 1-Wire devices connected to the bus:\\n\\n     ```csharp\\n     var deviceList = _OneWireHost.FindAllDevices();\\n\\n     foreach(byte[] device in deviceList)\\n     {\\n         string serial = \\"\\";\\n\\n         foreach (byte b in device)\\n         {\\n             serial += b.ToString(\\"X2\\");\\n         }\\n\\n         Console.WriteLine($\\"{serial}\\");\\n     }\\n     ```\\n\\n     Check out the [1-Wire sample](https://github.com/nanoframework/Samples/blob/main/samples/1-Wire).\\n\\n > Note: devices have different ways to name pins and set them up. It is important to check the default configuration, especially for any STM32 devices. ESP32 devices can be set dynamically. A NuGet package is available for this [nanoFramework.Hardware.Esp32](https://github.com/nanoframework/nanoFramework.Hardware.Esp32). In that case, you would have to set the pins if they don\'t match your [defaults pins](https://docs.nanoframework.net/content/esp32/esp32_pin_out.html).\\n\\n ## IoT Repository and advanced bindings\\n\\n The alignment between .NET IoT and .NET nanoFramework allows code reuse between the different platforms. While it\'s not technically possible to have the same NuGet for both platforms, reusing API and code is possible. A lot of work and effort has been put in place to facilitate the creation of individual NuGet packages for almost all of the .NET IoT bindings! The [IoT Device repository](https://github.com/nanoframework/nanoFramework.IoT.Device) contains all the tools and the code for all of the available bindings.\\n\\n The .NET nanoFramework does not *yet* support Generics or Linq, and in places, compromises have been made so the framework fits on constrained devices. [This page](https://docs.nanoframework.net/content/architecture/simplifications-and-trade-offs.html) explains most of them.\\n\\n Tools to help in the migration have been built to automate some of the migration and [initial work started back in May 2021](https://www.nanoframework.net/net-iot-bindings-available/). Now more than 98 bindings are available, some specific for MCU and optimized for a specific platform like ESP32. .NET IoT also benefited from this work as some of those new bindings have been migrated back to .NET IoT.\\n\\n Here is a view of the devices!\\n\\n [![device list](../static/img/png/iot-device-list.png)](https://github.com/nanoframework/nanoFramework.IoT.Device#list-of-devices)\\n\\n Each binding has a sample. All is well organized and you\'ll find those in the `/devices/BindingName/samples` directory. And as an example, here is how you can use a BMP280:\\n\\n ```csharp\\n // bus id on the MCU\\n const int busId = 1;\\n\\n I2cConnectionSettings i2cSettings = new(busId, Bmp280.DefaultI2cAddress);\\n I2cDevice i2cDevice = I2cDevice.Create(i2cSettings);\\n using var i2CBmp280 = new Bmp280(i2cDevice);\\n\\n // set higher sampling\\n i2CBmp280.TemperatureSampling = Sampling.LowPower;\\n i2CBmp280.PressureSampling = Sampling.UltraHighResolution;\\n\\n // Perform a synchronous measurement\\n var readResult = i2CBmp280.Read();\\n\\n // Print out the measured data\\n Debug.WriteLine($\\"Temperature: {readResult.Temperature?.DegreesCelsius:N1}\\\\u00B0C\\");\\n Debug.WriteLine($\\"Pressure: {readResult.Pressure?.Hectopascals:N2}hPa\\");\\n ```\\n\\n Note the usage of [UnitsNet](https://github.com/angularsen/UnitsNet). UnitsNet is used to facilitate unit conversions. We\'ve implemented the most popular unit conversions and provided them as NuGet packages. This simplifies development, for example, you don\'t need to worry about providing a temperature value in Celsius or Fahrenheit. It\'s just a temperature, the developer can choose the unit to display. The rest of the magic is done for you."},{"id":"07-closed-captioning-rpi","metadata":{"permalink":"/blog/07-closed-captioning-rpi","source":"@site/blog/2022-07-07-close-captioning-rpi.mdx","title":"07: A Closed Captioning Example on Raspberry Pi using Azure Cognitive services","description":"Welcome to Day 7 of #JulyOT!!","date":"2022-07-07T00:00:00.000Z","formattedDate":"July 7, 2022","tags":[{"label":"30days","permalink":"/blog/tags/30-days"},{"label":"iot","permalink":"/blog/tags/iot"},{"label":"iot4b","permalink":"/blog/tags/iot-4-b"},{"label":"aiatedge","permalink":"/blog/tags/aiatedge"}],"readingTime":0.975,"truncated":false,"authors":[{"name":"Jen Fox","title":"Senior Program Manager @Microsoft","url":"https://github.com/jenfoxbot","imageURL":"https://pbs.twimg.com/profile_images/1251933030194704385/bFUIbxQ-_400x400.jpg","key":"jen"}],"frontMatter":{"slug":"07-closed-captioning-rpi","title":"07: A Closed Captioning Example on Raspberry Pi using Azure Cognitive services","authors":["jen"],"tags":["30days","iot","iot4b","aiatedge"],"draft":false},"prevItem":{"title":"08: .NET nanoFramework GPIO, I2C, SPI and other IO support","permalink":"/blog/08-nano-framework"},"nextItem":{"title":"07: Plug and Play IoT device development with PnPFlow","permalink":"/blog/07-pnpflow"}},"content":"<head>\\n  <meta name=\\"twitter:url\\" content=\\"https://julyot.dev/blog/07-closed-captioning-rpi\\" />\\n  <meta name=\\"twitter:title\\" content=\\"A Closed Captioning Example on RaspberryPi using Azure Cognitive services\\" />\\n  <meta name=\\"twitter:description\\" content=\\"A Closed Captioning Example on RaspberryPi using Azure Cognitive services\\" />\\n  <meta name=\\"twitter:image\\" content=\\"https://julyot.dev/img/png/JulyOT-banner-7-closed-captioning.png\\" />\\n  <meta name=\\"twitter:card\\" content=\\"summary_large_image\\" />\\n  <meta name=\\"twitter:creator\\" content=\\"@jenfoxbot\\" />\\n  <meta name=\\"twitter:site\\" content=\\"@AzureAdvocates\\" />\\n  <link rel=\\"canonical\\" href=\\"https://julyot.dev/blog/07-closed-captioning-rpi\\" />\\n</head>\\n\\n> Welcome to Day 7 of **#JulyOT**!!\\n\\n![Welcome banner](/img/png/JulyOT-banner-7-closed-captioning.png)\\n\\n_Build a close captioning tool using a Raspberry Pi and Azure_\\n\\n## The project\\n\\nCheck out this cool GitHub repo that shows you how to use the Azure Cognitive services from Microsoft and build an example of the Speech to text on a IoT device like raspberry. We will be using youtube videos for our source of speech which would be the input, we will consume the speech data via Mic connected to raspberry and display the converted text in real time over a LCD screen.\\n\\n### See it in action\\n\\nCheck out this video to see this project in action.\\n\\n<video width=\\"640\\" height=\\"480\\" controls>\\n  <source src=\\"https://user-images.githubusercontent.com/46184494/172901241-2b21438e-2600-4397-a6b6-4cd5b5c7c63d.mp4\\" type=\\"video/mp4\\"/>\\n</video>\\n\\n### Get the instructions\\n\\nCheck out the [GitHub repo](https://github.com/m-mohsin-ali/closed-captioning-azure-speech-ai) for all the instructions.\\n\\n<form action=\\"https://github.com/m-mohsin-ali/closed-captioning-azure-speech-ai\\" target=\\"_blank\\">\\n    <input type=\\"submit\\" value=\\"GitHub repo\\" class=\\"clean-btn button button--primary margin-left--md\\"/>\\n</form>"},{"id":"07-pnpflow","metadata":{"permalink":"/blog/07-pnpflow","source":"@site/blog/2022-07-07-pnpflow.md","title":"07: Plug and Play IoT device development with PnPFlow","description":"Welcome to Day 7 of #JulyOT!!","date":"2022-07-07T00:00:00.000Z","formattedDate":"July 7, 2022","tags":[{"label":"30days","permalink":"/blog/tags/30-days"},{"label":"iot","permalink":"/blog/tags/iot"},{"label":"pnp","permalink":"/blog/tags/pnp"},{"label":"low-code","permalink":"/blog/tags/low-code"},{"label":"embeddediot","permalink":"/blog/tags/embeddediot"}],"readingTime":6.04,"truncated":false,"authors":[{"name":"Neo Xiong","title":"Senior Technical Specialist @Microsoft","url":"https://github.com/xiongyu0523","imageURL":"https://github.com/xiongyu0523.png","key":"neo"},{"name":"Jimmy Lai","title":"CEO @M5Stack","url":"https://github.com/m5stack","imageURL":"https://github.com/M5StackJimmyLai.png","key":"jimmylai"}],"frontMatter":{"slug":"07-pnpflow","title":"07: Plug and Play IoT device development with PnPFlow","authors":["neo","jimmylai"],"tags":["30days","iot","pnp","low-code","embeddediot"],"draft":false},"prevItem":{"title":"07: A Closed Captioning Example on Raspberry Pi using Azure Cognitive services","permalink":"/blog/07-closed-captioning-rpi"},"nextItem":{"title":"06: Edge Impulse Project of the Month competition","permalink":"/blog/06-edge-impulse-competition"}},"content":"<head>\\n  <meta name=\\"twitter:url\\" content=\\"https://julyot.dev/blog/07-pnpflow\\" />\\n  <meta name=\\"twitter:title\\" content=\\"Plug and Play IoT device development with PnPFlow\\" />\\n  <meta name=\\"twitter:description\\" content=\\"Plug and Play IoT device development with PnPFlow\\" />\\n  <meta name=\\"twitter:image\\" content=\\"https://julyot.dev/img/png/JulyOT-banner-7-pnpflow.png\\" />\\n  <meta name=\\"twitter:card\\" content=\\"summary_large_image\\" />\\n  <meta name=\\"twitter:creator\\" content=\\"@jimbobbennett\\" />\\n  <meta name=\\"twitter:site\\" content=\\"@AzureAdvocates\\" />\\n  <link rel=\\"canonical\\" href=\\"https://julyot.dev/blog/07-pnpflow\\" />\\n</head>\\n\\n> Welcome to Day 7 of **#JulyOT**!!\\n\\n![Welcome banner](/img/png/JulyOT-banner-7-pnpflow.png)\\n\\n## What we have for you today\\n\\n* [**Plug and Play on Windows**](#plug-and-play-on-windows)\\n* [**Azure IoT Plug and Play**](#iot-plug-and-play)\\n* [**The rise of Low-code IoT development**](#the-rise-of-low-code-iot-development)\\n* [**About M5STACK**](#introducing-m5stack)\\n* [**What is PnPFlow?**](#what-is-pnpflow)\\n* [**How does PnPFlow work**](#how-does-pnpflow-work)\\n* [**Associated links**](#associated-links)\\n\\n## Watch the introduction to PnPFlow\\n\\n<iframe width=\\"720\\" height=\\"405\\" src=\\"https://www.youtube.com/embed/Oo8HVQYg_ok\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\n## Plug and Play on Windows\\n\\nEveryone loves plug-and-play. When you connect a printer or a disk to your computer, they just work, and you don\'t have to worry about having installing drivers or configuring devices.\\n\\nThe introduction of the [Windows Plug and Play](https://docs.microsoft.com/windows-hardware/drivers/kernel/introduction-to-plug-and-play?wt.mc_id=eventspg_16482_webpage_reactor) framework solved problems with installing and configuring devices. The Plug and Play framework provided a standard interface for device builders, driver developers and the operating system.\\n\\nWindows Plug and Play provides a set of rules for device discovery, driver interfaces, device configuration, and user notification. When everyone communicates according to unified rules, plug-and-play become a reality, end users can use devices without worrying how to set them up.\\n\\n![IOT plug and play banner](/img/png/iotpnp.png)\\n\\n## IoT Plug and Play\\n\\nFrom the PC industry to the IoT world, the situation is even more complicated. Fragmentation in the IoT industry is a long-standing problem. There are many players involved, and there aren\'t well-accepted standards for interoperability. Complexity increases costs and slows down the progress of enterprise IoT deployment and digital transformation.\\n\\n[IoT Plug and Play](https://docs.microsoft.com/azure/iot-develop/overview-iot-plug-and-play?wt.mc_id=eventspg_16482_webpage_reactor) is Microsoft\'s answer to IoT interoperability. Building an ecosystem to provide seamless integration between off-the-shelf devices and cloud solutions.\\n\\nIoT Plug and Play is based on the open modeling language [DTDL](https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md) that allows IoT devices to declare their capabilities to a solution. At the center of IoT Plug and Play is a schema that describes device capabilities with a [JSON-LD](https://json-ld.org/) model document.\\n\\nAn IoT Plug and Play model uses the following interfaces to describe and model any device:\\n\\n* Telemetry\\n  Usually time-series data like temperature measurements or events such as alerts).\\n* Properties\\n  Attributes like firmware version or long-running settings like target fan speed.\\n* Commands\\n  For example, reboot a device, or open a door lock.\\n\\nThe modeling architecture supports interface reuse across device capability models to facilitate collaboration and speed development.\\n\\nSolutions built on Azure IoT, including Azure IoT Hub and Central, support IoT Plug and Play natively. Application developers can also build IoT Plug and Play enabled solutions that adapt to IoT devices by parsing their DTDL models.\\n\\n> IoT Plug and Play is also part of the [Azure Certified Device program](https://www.microsoft.com/azure/partners/azure-certified-device?wt.mc_id=eventspg_16482_webpage_reactor) which enables device developers to differentiate and certify their IoT devices and a central catalogue for customers to discover IoT devices.\\n\\n## The rise of Low-code IoT development\\n\\nThe benefits of plug-and-play go beyond just connecting two systems, it is also useful for accelerating IoT hardware and software development.\\n\\nTo achieve hardware plug-and-play, the interface should be standardized and the hardware should be modular. Just like Lego building blocks, various prototypes can be easily designed. From the rise of Arduino to various open-source hardware, such as Microsoft [Jacdac](https://microsoft.github.io/jacdac-docs/), device manufacturers want ways to make hardware connections less expensive and more convenient.\\n\\nFrom a software development perspective, graphical programming and low-code development are very popular. [NodeRed](https://nodered.org/) and Microsoft [MakeCode](https://www.microsoft.com/makecode?wt.mc_id=eventspg_16482_webpage_reactor) are two great examples. Anyone can quickly implement business logic and build prototypes without requiring deep professional knowledge and programming skills. Countless innovative projects around the world use these platforms to solve real problems.\\n\\n## Introducing M5STACK\\n\\nM5STACK is a great example of a company that builds products that are both modular and use low-code graphic programming, this makes IoT development easier.\\n\\n[M5STACK](https://m5stack.com/), based in Shenzhen, China, is a technology company that designs and manufactures open-source IoT development devices for the global market. They\'re also an IoT device partner of Microsoft Azure, offering IoT modules and engineering services to enterprise customers.\\n\\n![A photo of a huge range of M5 stack devices such as sensors and actuators](/img/png/m5stackdevice.png)\\n\\nM5STACK builds hundreds of sensors, actuators, and communication modules that can be connected through standard interfaces. These modules plug and play with the [UIFLOW](https://flow.m5stack.com) low-code graphical programming IDE to give the best IoT project prototyping experience from entry-level hobbyists to professional developers.\\n\\nWith UIFLOW, a user builds a solution with single blocks, or they can implement more advanced scenarios by combining several blocks. For example, blocks can be combined to move data between industrial networks like Modbus to internet services over TCP/IP without requiring a deep understanding of these protocols.\\n\\n![A block based editor for coding the M5 stack](/img/png/uiflow.png)\\n\\nM5STACK aims to cooperate with other companies to create a more open and interconnected IoT developer platform. Their [kits](https://devicecatalog.azure.com/devices/84fe4cc3-cdf1-48a1-8b58-07685890f359) are certified for Azure IoT Plug and Play. UIFLOW has advanced [Azure IoT support](https://docs.m5stack.com/en/uiflow/iotcloud/azure) built-in.  Users can build a device with just a few clicks to connect to Azure IoT Hub or Azure IoT Central.\\n\\n## What is PnPFlow?\\n\\nProject PnPFlow is the latest collaboration between M5STACK and the Azure IoT team. A better together experience for developer to build an IoT Plug and Play device without knowing the complexity of Plug and Play protocol and DTDL model. All you have to do is to drag and drop blocks to build a business-centric application in UIFLOW. The device will be automatically provisioned on Azure IoT Central and seamlessly will work with IoT Central template based web-UI .\\n\\n## How does PnPFlow work?\\n\\n1. Each supported hardware component, be it standalone hardware like a UNIT sensor, or a built-in Core module component, such as a built-in RTC peripheral, have capabilities modeled as an IoT Plug and Play interface. The models are hosted on [Github](https://github.com/m5stack/M5-iot-plugandplay-models).\\n\\n2. The UIFLOW has built-in intelligence to load predefined models, generate \'Smart\' blocks to represent each telemetry, property, or command operation, and associate with hardware blocks using an assignment expression. The l-value is a schema-aware object defined in the model, and the r-value is the corresponding hardware operations or a user-provided value.\\n\\n    ![A block based editor showing how to write PnP flow code](/img/png/pnpflowblock.png)\\n\\n3. The user can choose one or more \'Smart\' blocks, manipulate them and integrate them with custom application logic. The UIFLOW will dynamically compose predefined interfaces into a single top-level device model.\\n\\n4. To further improve developer experience, UIFLOW  natively integrates with Azure IoT Central. Users can log in to their IoT Central applications, create and update device templates, and manage device identities without leaving UIFLOW. The IoT Central application template will be customized to reflect the device\'s capabilities and a default page will be automatically generated.\\n\\n    ![An animated GIF showing how to connect the UI flow block based editor to Azure IoT Central](/img/gif/pnpflow-iotcentral.gif)\\n\\nAre you exciting about Plug and Play IoT development? Get some devices from M5STACK and go to [UIFLOW](https://flow.m5stack.com) to test it out.\\n\\n## Associated links\\n\\n* [Build with Azure IoT Central and IoT Plug and Play](https://azure.microsoft.com/en-us/blog/build-with-azure-iot-central-and-iot-plug-and-play/?wt.mc_id=eventspg_16482_webpage_reactor)\\n* [Understanding IoT Plug and Play modeling](https://docs.microsoft.com/azure/iot-develop/concepts-modeling-guide?wt.mc_id=eventspg_16482_webpage_reactor)\\n* [M5STACK UIFLOW Documentation](https://docs.m5stack.com/en/quick_start/m5core/uiflow)"},{"id":"06-edge-impulse-competition","metadata":{"permalink":"/blog/06-edge-impulse-competition","source":"@site/blog/2022-07-06-edge-impulse-competition.mdx","title":"06: Edge Impulse Project of the Month competition","description":"Welcome to Day 6 of #JulyOT!!","date":"2022-07-06T00:00:00.000Z","formattedDate":"July 6, 2022","tags":[{"label":"30days","permalink":"/blog/tags/30-days"},{"label":"iot","permalink":"/blog/tags/iot"},{"label":"aiatedge","permalink":"/blog/tags/aiatedge"},{"label":"embedded","permalink":"/blog/tags/embedded"}],"readingTime":1.315,"truncated":false,"authors":[{"name":"Jim Bennett","title":"Senior Regional Cloud Advocate @Microsoft","url":"https://github.com/jimbobbennett","imageURL":"https://github.com/jimbobbennett.png","key":"jimb"}],"frontMatter":{"slug":"06-edge-impulse-competition","title":"06: Edge Impulse Project of the Month competition","authors":["jimb"],"tags":["30days","iot","aiatedge","embedded"],"draft":false},"prevItem":{"title":"07: Plug and Play IoT device development with PnPFlow","permalink":"/blog/07-pnpflow"},"nextItem":{"title":"05: Altair Everywhere","permalink":"/blog/julyot-day5-embedded"}},"content":"<head>\\n  <meta name=\\"twitter:url\\" content=\\"https://julyot.dev/blog/06-edge-impulse-competition\\" />\\n  <meta name=\\"twitter:title\\" content=\\"Build and share your object detection project in minutes\\" />\\n  <meta name=\\"twitter:description\\" content=\\"Edge Impulse Challenge of the month: July - Build and share your object detection project in minutes\\" />\\n  <meta name=\\"twitter:image\\" content=\\"https://julyot.dev/img/png/JulyOT-banner-6-edge-impulse-competition.png\\" />\\n  <meta name=\\"twitter:card\\" content=\\"summary_large_image\\" />\\n  <meta name=\\"twitter:creator\\" content=\\"@jimbobbennett\\" />\\n  <meta name=\\"twitter:site\\" content=\\"@AzureAdvocates\\" />\\n  <link rel=\\"canonical\\" href=\\"https://julyot.dev/blog/06-edge-impulse-competition\\" />\\n</head>\\n\\n> Welcome to Day 6 of **#JulyOT**!!\\n\\n![Post banner](/img/png/JulyOT-banner-6-edge-impulse-competition.png)\\n\\n# Edge Impulse challenge of the month - July\\n\\n[Edge Impulse](https://edgeimpulse.com) have announced their challenge of the month for July, perfecting timing for #JulyOT.\\n\\nimport ThemedImage from \'@theme/ThemedImage\';\\n\\n<ThemedImage\\n  alt=\\"Docusaurus themed image\\"\\n  sources={{\\n    light: \'/img/svg/edge-impulse-dark.svg\',\\n    dark: \'/img/svg/edge-impulse-light.svg\',\\n  }}\\n/>\\n\\n## Build and share your object detection project in minutes\\n\\nPublic Projects help the community learn from each other, and teach developers and engineers how to solve real-world problems with Edge Impulse. This month we are asking developers to see what problems they can solve with object detection on tiny devices!\\n\\nWith object detection you are able to detect the presence and the position of any object within an image. Use our object detection pre-built ML block that leverages transfer learning to quickly get your device to detect the objects of your choice.\\n\\n## Win prizes!\\n\\nThe top prize for the best project is $2000 and an entry into their annual competition to win a macBook Pro, AirPods and an Edge Impulse backpack. 2 runners up get $200.\\n\\nYou can find all the details and the rules on the [Edge Impulse competition page](https://edgeimpulse.com/projectofthemonth).\\n\\n<form action=\\"https://edgeimpulse.com/projectofthemonth\\" target=\\"_blank\\">\\n    <input type=\\"submit\\" value=\\"Learn more and enter\\" class=\\"clean-btn button button--primary margin-left--md\\"/>\\n</form>"},{"id":"julyot-day5-embedded","metadata":{"permalink":"/blog/julyot-day5-embedded","source":"@site/blog/2022-07-05-embedded.md","title":"05: Altair Everywhere","description":"Welcome to Day 5 of #JulyOT!!","date":"2022-07-05T00:00:00.000Z","formattedDate":"July 5, 2022","tags":[{"label":"30days","permalink":"/blog/tags/30-days"},{"label":"iot","permalink":"/blog/tags/iot"},{"label":"iot4b","permalink":"/blog/tags/iot-4-b"},{"label":"embeddediot","permalink":"/blog/tags/embeddediot"}],"readingTime":2.765,"truncated":false,"authors":[{"name":"Dave Glover","title":"Senior Cloud Advocate @Microsoft","url":"https://github.com/gloveboxes","imageURL":"https://github.com/gloveboxes.png","key":"dave"}],"frontMatter":{"slug":"julyot-day5-embedded","title":"05: Altair Everywhere","authors":["dave"],"tags":["30days","iot","iot4b","embeddediot"],"draft":false},"prevItem":{"title":"06: Edge Impulse Project of the Month competition","permalink":"/blog/06-edge-impulse-competition"},"nextItem":{"title":"04: Detect the very big with the very small \u2013 counting bears with TinyML meetup from IoT North","permalink":"/blog/julyot-day4"}},"content":"<head>\\n  <meta name=\\"twitter:url\\" content=\\"https://julyot.dev/blog/julyot-day5-embedded\\" />\\n  <meta name=\\"twitter:title\\" content=\\"Altair IoT Everywhere!\\" />\\n  <meta name=\\"twitter:description\\" content=\\"Altair Everywhere scale IoT apps from embedded to desktop\\" />\\n  <meta name=\\"twitter:image\\" content=\\"https://julyot.dev/img/png/JulyOT-banner-5-altair.png\\" />\\n  <meta name=\\"twitter:card\\" content=\\"summary_large_image\\" />\\n  <meta name=\\"twitter:creator\\" content=\\"@dglover\\" />\\n  <meta name=\\"twitter:site\\" content=\\"@AzureAdvocates\\" />\\n  <link rel=\\"canonical\\" href=\\"https://julyot.dev/blog/julyot-day5-embedded\\" />\\n</head>\\n\\n> Welcome to Day 5 of **#JulyOT**!!\\n\\n![Post banner](/img/png/JulyOT-banner-5-altair.png)\\n\\n_The goal of the cloud-connected Altair project is to provide a unique blend of [computing history](https://en.wikipedia.org/wiki/Retrocomputing) with modern cloud computing. You\'ll learn about computing fundamentals, software development, and modern IoT, Data, and AI cloud services that address today\'s real-world IT challenges._\\n\\n## Run Altair Everywhere\\n\\nThe Altair Everywhere project is tested and runs on the following platforms:\\n\\n1. On a [POSIX](https://en.wikipedia.org/wiki/POSIX) compatible operating system including Linux, Windows with [WSL 2](https://docs.microsoft.com/windows/wsl/install?wt.mc_id=eventspg_16482_webpage_reactor), macOS on Apple Silicon and Intel.\\n1. [Raspberry Pi](https://www.raspberrypi.org/), models, Zero 1 & 2, 2B, 3B, 3B, and 4 running Raspberry Pi OS.\\n\\n    | Raspberry Pi with Pi Sense HAT  | Raspberry Pi Sense HAT |\\n    |--|--|\\n    | ![The image shows the address and data bus LEDs](../static/img/png/raspberry_pi_sense_hat_map.png) | ![The gif shows the address and data bus LEDs in action](../static/img/gif/raspberry_pi_sense_hat.gif) |\\n\\n1. [Azure Sphere Avnet and Seeed Developer Kits](https://azure.microsoft.com/services/azure-sphere/) running embedded Linux.\\n\\n    | Azure Sphere with the Altair front panel kit | MikroE Retro Click |\\n    |--|--|\\n    | ![The gif shows the Altair on Azure Sphere with the Altair front panel](../static/img/gif/altair_on_sphere.gif) | ![The gif shows the address and data bus LEDs in action](../static/img/gif/avnet_retro_click.gif) |\\n\\n## What We\'ll Cover\\n\\nThe Altair project can be viewed through three lenses:\\n\\n1. Learn how to develop multithreaded event-driven IoT C applications that scale from embedded [microcontrollers](https://en.wikipedia.org/wiki/Microcontroller) to [Raspberry Pis](https://en.wikipedia.org/wiki/Raspberry_Pi), to desktop-class computers.\\n1. A fantastic safe way to explore Intel 8080 machine-level programming and Assembly programming, along with C and BASIC development.\\n1. If you are interested in retro gaming, chill out playing retro games from yesteryear.\\n\\n## Cloud services integration\\n\\nOptionally, the project integrates free weather and pollution cloud services from Open Weather Map, Azure IoT Central, and Azure Anomaly Detection Cognitive Service. The following reports were generated from data published by the Altair emulator using data sourced from Open Weather Map.\\n\\n| IoT Central Sydney pollution report | Azure Anomaly Detection report|\\n|------|-----|\\n| ![The images shows pollution report for Sydney](../static/img/png/iot_central_pollution_report.png) | ![The following images shows temperature based anomalies](../static/img/png/univariate-anomalies.png) |\\n\\n## Get Started\\n\\nHead to the [Altair Everywhere](https://github.com/gloveboxes/Altair8800.Emulator.UN-X/wiki) repo, get started, have some fun, learn new skills, and impress your friends and family :)\\n\\n## Altair History\\n\\n![The image shows the Altair 8800](../static/img/png/altair-8800-smithsonian-museum.png)\\n\\n[Altair 8800 image attribution - Smithsonian Museum](https://commons.wikimedia.org/wiki/File:Altair_8800,_Smithsonian_Museum.jpg)\\n\\nThe Altair 8800 was built on the [Intel 8080](https://en.wikipedia.org/wiki/Intel_8080?azure-portal=true) CPU, the second 8-bit microprocessor manufactured by Intel in 1974. By today\'s standards, it\'s a simple CPU design, perfect for learning computing fundamentals because of its small instruction set.\\n\\nThe original Altair 8800 was programmed by setting switches on the front panel. It was a painstaking, error-prone process to load and run a program. The Altair 8800 had a series of LEDs and switches that you used to load apps and determine the state of the Altair.\\n\\nYou could save and load applications from a paper tape reader connected to the Altair 8800. As the Altair 8800 grew in popularity, more options became available. You could attach a keyboard, a computer monitor, and disk drives, a more reliable way to save and load applications."},{"id":"julyot-day4","metadata":{"permalink":"/blog/julyot-day4","source":"@site/blog/2022-07-04-iot-north.md","title":"04: Detect the very big with the very small \u2013 counting bears with TinyML meetup from IoT North","description":"Welcome to Day 4 of #JulyOT!!","date":"2022-07-04T00:00:00.000Z","formattedDate":"July 4, 2022","tags":[{"label":"30days","permalink":"/blog/tags/30-days"},{"label":"iot","permalink":"/blog/tags/iot"},{"label":"aiatedge","permalink":"/blog/tags/aiatedge"}],"readingTime":2.25,"truncated":false,"authors":[{"name":"Jim Bennett","title":"Senior Regional Cloud Advocate @Microsoft","url":"https://github.com/jimbobbennett","imageURL":"https://github.com/jimbobbennett.png","key":"jimb"}],"frontMatter":{"slug":"julyot-day4","title":"04: Detect the very big with the very small \u2013 counting bears with TinyML meetup from IoT North","authors":["jimb"],"tags":["30days","iot","aiatedge"],"draft":false},"prevItem":{"title":"05: Altair Everywhere","permalink":"/blog/julyot-day5-embedded"},"nextItem":{"title":"02: IoT for beginners","permalink":"/blog/julyot-day2"}},"content":"<head>\\n  <meta name=\\"twitter:url\\" content=\\"https://julyot.dev/blog/julyot-day4\\" />\\n  <meta name=\\"twitter:title\\" content=\\"IoT North meetup\\" />\\n  <meta name=\\"twitter:description\\" content=\\"Detect the very big with the very small \u2013 counting bears with TinyML meetup from IoT North\\" />\\n  <meta name=\\"twitter:image\\" content=\\"https://julyot.dev/img/png/JulyOT-banner-4-iot-north.png\\" />\\n  <meta name=\\"twitter:card\\" content=\\"summary_large_image\\" />\\n  <meta name=\\"twitter:creator\\" content=\\"@jimbobbennett\\" />\\n  <meta name=\\"twitter:site\\" content=\\"@AzureAdvocates\\" /> \\n  <link rel=\\"canonical\\" href=\\"https://julyot.dev/blog/julyot-day4\\" />\\n</head>\\n\\n> Welcome to Day 4 of **#JulyOT**!!\\n\\n![Page banner](/img/png/JulyOT-banner-4-iot-north.png)\\n\\n# Detect the very big with the very small \u2013 counting bears with TinyML meetup from IoT North\\n\\nToday we have a sneak peek at a meetup coming tomorrow (5th July), to give you time to sign up and join! This meetup event will be live streamed from IoT North, and starts on the 5th July at 6PM BST/10AM PDT.\\n\\nCatch the recording here!\\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/8imvkDhdxnw\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\n## IoT North\\n\\nIoT North is meetup for makers and developers working on all kinds of hardware and software projects around the Internet of Things (IoT). Come and talk about your projects, what you\'re working on and share experiences.\\n\\nNow a part of IoT North - www.IoTNorth.uk - giving businesses a North in IoT\\n\\n## What this meetup is about\\n\\nJim left the UK a few years ago to move to the Pacific North West of the US. Back in the UK the scariest animal he might have encountered would be a sudden hedgehog, but in Washington State where he lives it seems there are bears! He even lost an apple tree and a fence to one once.\\n\\nA useful tool for him would be a bear detector \u2013 a device to alert him if there are bears in the garden. Such a tool could be built using an AI model trained in the cloud and running on a powerful computer. But who wants to risk a powerful computer outside when there are bears?\\n\\nWhat if he could run a bear detector on a relatively inexpensive microcontroller, then see the results on a cloud dashboard?\\n\\nThis is where TinyML comes in! TinyML is shrinking AI models down very small, as in kilobytes in size, then running them on low power microcontrollers, or tiny computers like a Raspberry Pi Zero.\\n\\nIn this session Jim will train a bear detector using [Edge Impulse](https://edgeimpulse.com), an on-line development platform for TinyML models, taking advantage of their new FOMO object detection model. He\u2019ll then show how to run this model on a low powered device, uploading the detection results to an Azure IoT Central dashboard.\\n\\nBy the end of this session, you will have an understanding of TinyML, how to train models, how to visualize data, and just how wary of bears Jim actually is\u2026"},{"id":"julyot-day2","metadata":{"permalink":"/blog/julyot-day2","source":"@site/blog/2022-07-02.mdx","title":"02: IoT for beginners","description":"Welcome to Day 2 of #JulyOT!!","date":"2022-07-02T00:00:00.000Z","formattedDate":"July 2, 2022","tags":[{"label":"30days","permalink":"/blog/tags/30-days"},{"label":"iot","permalink":"/blog/tags/iot"},{"label":"iot4b","permalink":"/blog/tags/iot-4-b"}],"readingTime":1.765,"truncated":false,"authors":[{"name":"Jim Bennett","title":"Senior Regional Cloud Advocate @Microsoft","url":"https://github.com/jimbobbennett","imageURL":"https://github.com/jimbobbennett.png","key":"jimb"}],"frontMatter":{"slug":"julyot-day2","title":"02: IoT for beginners","authors":["jimb"],"tags":["30days","iot","iot4b"],"draft":false},"prevItem":{"title":"04: Detect the very big with the very small \u2013 counting bears with TinyML meetup from IoT North","permalink":"/blog/julyot-day4"},"nextItem":{"title":"01: Getting started with nanoFramework!","permalink":"/blog/01-nano-framework"}},"content":"<head>\\n  <meta name=\\"twitter:url\\" content=\\"https://julyot.dev/blog/julyot-day2\\" />\\n  <meta name=\\"twitter:title\\" content=\\"IoT for beginners!\\" />\\n  <meta name=\\"twitter:description\\" content=\\"Spend your weekend learning with IoT for beginners!\\" />\\n  <meta name=\\"twitter:image\\" content=\\"https://julyot.dev/img/png/JulyOT-banner-2-iot-for-beginners.png\\" />\\n  <meta name=\\"twitter:card\\" content=\\"summary_large_image\\" />\\n  <meta name=\\"twitter:creator\\" content=\\"@jimbobbennett\\" />\\n  <meta name=\\"twitter:site\\" content=\\"@AzureAdvocates\\" /> \\n  <link rel=\\"canonical\\" href=\\"https://julyot.dev/blog/julyot-day2\\" />\\n</head>\\n\\n> Welcome to Day 2 of **#JulyOT**!! \\n\\n![Page banner](/img/png/JulyOT-banner-2-iot-for-beginners.png)\\n\\nAs we go into the first weekend of July, and a long weekend for some, there\'s no better time to brush up on your basics.\\n\\nFor day 2 of #JulyOT we are dipping into the archives to bring you [IoT for Beginners](https://aka.ms/iot-beginners), a 12-week, 24-lesson free and open source IoT curriculum to teach you IoT from the ground up. You can use this for self learning, or re-use hte contents any way you need for teaching or learning. Whether you are a professional developer who wants to learn a new skill, or a teacher looking for IoT classroom content, this curriculum is for you.\\n\\n  <form action=\\"https://aka.ms/iot-beginners\\" target=\\"_blank\\">\\n      <input type=\\"submit\\" value=\\"Start the course\\" class=\\"clean-btn button button--primary margin-left--md\\"/>\\n  </form>\\n\\n## Course outline\\n\\n![A rodmap for IoT for beginners](https://github.com/microsoft/IoT-For-Beginners/raw/main/sketchnotes/Roadmap.jpg)\\n\\nIoT for Beginners is split into 6 projects, each one teaching important IoT concepts and coupled with you actually building something. The projects follow the path from farm to table, showing how IoT can improve the journey food makes, and covering industrial IoT, digital agriculture, AI on the edge, retail IoT, and consumer IoT.\\n\\n* Introduction - build an IoT nightlight\\n* Digital agriculture - build an automated watering system\\n* Logistics - build a vehicle tracker with a dashboard and location alerts\\n* Manufacturing - use AI on the edge to build a fruit monitor\\n* Retail - use AI on the edge to do stock monitoring\\n* Consumer - build a voice controlled smart timer\\n\\n## Meet the team\\n\\nThis course was put together as a collaboration between IoT experts at Microsoft, and students from all around the world. You can learn more from the following video:\\n\\n[![Promo video](https://github.com/microsoft/IoT-For-Beginners/raw/main/images/IOT.gif)](https://youtu.be/-wippUJRi5k)\\n\\n**Gif by** [Mohit Jaisal](https://linkedin.com/in/mohitjaisal)\\n\\n## Get started\\n\\nWhat are you waiting for? Head to the [IoT for Beginners repo on GitHub](https://aka.ms/iot-beginners) and get started!"},{"id":"01-nano-framework","metadata":{"permalink":"/blog/01-nano-framework","source":"@site/blog/2022-07-01-nano-framework.md","title":"01: Getting started with nanoFramework!","description":"Welcome to Day 1 of #JulyOT!","date":"2022-07-01T00:00:00.000Z","formattedDate":"July 1, 2022","tags":[{"label":"30days","permalink":"/blog/tags/30-days"},{"label":"iot","permalink":"/blog/tags/iot"},{"label":"embeddediot","permalink":"/blog/tags/embeddediot"}],"readingTime":5.48,"truncated":false,"authors":[{"name":"Laurent Ellerbach","title":"Principal Engineering Manager @Microsoft","url":"https://github.com/ellerbach","imageURL":"https://github.com/ellerbach.png","key":"laurent"},{"name":"Jos\xe9 Sim\xf5es","title":"CEO @Eclo Solutions","url":"https://github.com/josesimoes","imageURL":"https://github.com/josesimoes.png","key":"jose"}],"frontMatter":{"slug":"01-nano-framework","title":"01: Getting started with nanoFramework!","authors":["laurent","jose"],"tags":["30days","iot","embeddediot"],"draft":false},"prevItem":{"title":"02: IoT for beginners","permalink":"/blog/julyot-day2"},"nextItem":{"title":"01: Welcome to #JulyOT!","permalink":"/blog/01-julyot-kickoff"}},"content":"<head>\\n  <meta name=\\"twitter:url\\" content=\\"https://julyot.dev/blog/01-nano-framework\\" />\\n  <meta name=\\"twitter:title\\" content=\\"Getting started with nanoFramework\\" />\\n  <meta name=\\"twitter:description\\" content=\\"Getting started with nanoFramework\\" />\\n  <meta name=\\"twitter:image\\" content=\\"https://julyot.dev/img/png/JulyOT-banner-1-nanoframework.png\\" />\\n  <meta name=\\"twitter:card\\" content=\\"summary_large_image\\" />\\n  <meta name=\\"twitter:creator\\" content=\\"@jimbobbennett\\" />\\n  <meta name=\\"twitter:site\\" content=\\"@AzureAdvocates\\" /> \\n  <link rel=\\"canonical\\" href=\\"https://julyot.dev/blog/01-nano-framework\\" />\\n</head>\\n\\n> Welcome to Day 1 of **#JulyOT**!\\n\\n![Page banner](/img/png/JulyOT-banner-1-nanoframework.png)\\n\\n## What we have for you today\\n\\n* [**Getting started with nanoFramework**](#getting-started-with-nanoframework)\\n* [**What is .NET nanoFramework?**](#what-is-net-nanoframework)\\n* [**Why use .NET nanoFramework?**](#why-use-net-nanoframework)\\n* [**Associated links:**](#associated-links)\\n\\n## Getting started with nanoFramework\\n\\n.NET nanoFramework: Our mantra is about **making it easy to write C# code for embedded systems!** And all that we\'re doing here is about that. This free and Open Source platform enables the writing of managed code applications for constrained embedded devices. As a developer, you can use your powerful and familiar tools like Microsoft Visual Studio IDE and your .NET C# skills to write code on a microcontroller.\\n\\n.NET nanoFramework supports a large variety of Micro Controller Units (MCU): STM32, ESP32, TI, and NXP. The .NET nanoFramework provides access to low-level IO and protocols, as well as networking and advanced security features allowing connection to the Cloud.\\n\\nHere you\'ll find all the tools, examples, documentation and a great developer ecosystem to help you on your next embedded systems project.\\n\\n> **New**: Adoption of .NET nanoFramework is growing fast. It just reached 2 million NuGet downloads, it took 5 years to reach the first million and only 9 months for the second one! Read more about it [here](https://www.nanoframework.net/2-million-nuget-downloads-and-counting/)\\n\\nTo get started, you can use our [step by step guide](https://docs.nanoframework.net/content/getting-started-guides/getting-started-managed.html) containing as well short videos.\\n\\nYou\'ll go through the installation of the Visual Studio extension:\\n\\n![step by step](https://docs.nanoframework.net/images/getting-started-guides/getting-started-extension-installation.gif)\\n\\nThen installing `nanoff`, the tool to flash your device, and flashing your device:\\n\\n![install and flash nanoff](https://docs.nanoframework.net/images/getting-started-guides/getting-started-install-nanoff-flash-esp32.gif)\\n\\nAnd then coding your first hello .NET nanoFramework application and setting debug breakpoints in your code:\\n\\n![Hello nano](https://docs.nanoframework.net/images/getting-started-guides/getting-started-first-project.gif)\\n\\nIn a matter of a few minutes, you\'ll be up and running with .NET nanoFramework!\\n\\nAnd a lot of samples to start: <https://github.com/nanoframework/Samples>\\n\\n## What is .NET nanoFramework?\\n\\n.NET **nanoFramework** is a [free and open-source](https://en.wikipedia.org/wiki/Free_and_open-source_software) platform that enables the writing of managed code applications for constrained [embedded devices](https://en.wikipedia.org/wiki/Embedded_system). It is suitable for many types of projects including IoT sensors, wearables, academic proof of concept, robotics, hobbyist/makers creations, or even complex industrial equipment. The .NET nanoFramework makes development easier, faster, and less costly by giving embedded developers access to modern technologies and tools used by desktop application developers.\\n\\nDevelopers can harness the powerful and familiar [Microsoft Visual Studio IDE](https://www.visualstudio.com/vs/?wt.mc_id=eventspg_16482_webpage_reactor) and their [.NET](https://en.wikipedia.org/wiki/.NET_Framework) [C#](https://en.wikipedia.org/wiki/C_Sharp_(programming_language)) knowledge to quickly write code without having to worry about the low-level hardware intricacies of a microcontroller. Desktop .NET developers will feel \u201cat home\u201d and can use their skills in embedded systems development, enlarging the pool of qualified embedded developers. Using Microsoft Visual Studio, a developer can deploy and debug the code directly on real hardware.\\n\\nThe .NET nanoFramework includes a reduced version of the .NET [Common Language Runtime](https://en.wikipedia.org/wiki/Common_Language_Runtime) (CLR) and features a subset of the .NET base class libraries along with the most common APIs included in [.NET IoT](https://docs.microsoft.com/uwp/api/?wt.mc_id=eventspg_16482_webpage_reactor) allowing code reuse from .NET IoT applications, thousands of code examples, and open source projects.\\n\\nThe project is supported by the .NET Foundation.\\n\\nYou can watch this video from the Microsoft [IoT Show](https://aka.ms/iotshow) featuring .NET nanoFramework connected to Azure IoT Hub, measuring a [BMP280 sensors](https://docs.nanoframework.net/devices/Iot.Device.Bmxx80.Bmp280.html), and using the unique deep sleep feature from microcontrollers. A real-life example with .NET nanoFramework:\\n\\n[![IoT Show](/img/jpg/nanoframework-iot-show.jpg)](https://docs.microsoft.com/shows/internet-of-things-show/introduction-to-net-nanoframework?wt.mc_id=eventspg_16482_webpage_reactor)\\n\\n## Why use .NET nanoFramework?\\n\\n.NET **nanoFramework** is the perfect enabler for developing software that works on embedded devices. Start with a low-cost and readily available development board, then use nanoFramework to write, debug and deploy your code.\\n\\nWhether this is your first foray into programming or you are a seasoned developer, if you want a powerful and easy-to-use tool for developing software that runs on embedded devices, you are in the right place. With its modular architecture, it\'s easy to grab the core components (like the CLR, debugger, and interpreter) and extend them to new hardware platforms, .NET nanoFramework is the perfect partner for your project. The current reference implementation uses [ChibiOS](http://www.chibios.org/dokuwiki/doku.php) supporting several [ST Microelectronics](http://www.st.com/content/st_com/en.html) development boards, Espressif [ESP32](https://en.wikipedia.org/wiki/ESP32), Texas Instruments [CC3220 Launchpad](https://www.ti.com/tool/CC3220SF-LAUNCHXL), [CC1352 Launchpad](https://www.ti.com/tool/LAUNCHXL-CC1352R1), and NXP [MIMXRT1060-EVK](https://www.nxp.com/part/MIMXRT1060-EVK#/).\\n\\nBecause it\'s completely [free and Open Source](https://en.wikipedia.org/wiki/Free_and_open-source_software) you have access to and the ability to modify all parts of the code including the ability to leverage what others have already contributed. If you are willing to, you can help shape the future by contributing back to the project and rapidly growing community.\\n\\nHere are a couple of supported boards:\\n\\n![nucleo](https://docs.nanoframework.net/images/reference-targets/nucleo64-f091rc.jpg)![esp32](https://docs.nanoframework.net/images/reference-targets/esp32-devkitc.jpg)![M5Stack](https://docs.nanoframework.net/images/reference-targets/m5stack.jpg)![OrgPall PalThree](https://docs.nanoframework.net/images/reference-targets/orgpal-palthree.jpg)![NXP](https://docs.nanoframework.net/images/reference-targets/mimxrt1060_evk.jpg)\\n\\nOur reference boards can be found [here](https://github.com/nanoframework/nf-interpreter#net-nanoframework-interpreter-for-reference-boards). And community boards [here](https://github.com/nanoframework/nf-Community-Targets#available-community-boards). Depending on your board, it can be a matter of a few hours to get your board supported! A blog post will explain how.\\n\\nHere are some of its unique features:\\n\\n* Can run on resource-constrained devices with as low as 128kB of flash and 64kB of RAM.\\n* Runs directly on bare metal. Currently, [ARM Cortex-M](https://en.wikipedia.org/wiki/ARM_Cortex-M) and [ESP32](https://en.wikipedia.org/wiki/ESP32) devices are supported.\\n* Supports common embedded peripherals and interconnects like GPIO, UART, SPI, I2C, USB, and networking.\\n* Provides multi-threading support natively.\\n* Support for energy-efficient operations such as devices running on batteries.\\n* Support for Interop code allows developers to easily write libraries that have both managed (C#) and native code (C/C++).\\n* No manual memory management because of its simpler mark-and-sweep [garbage collector](https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)).\\n* Execution constraints to catch device lockups and crashes.\\n\\nHere are some advantages over other similar systems:\\n\\n* First-class debugger experience right on the target hardware with breakpoints, single step, step into, step out, step over, pause and stop.\\n* Powerful and free developer tools with [Microsoft Visual Studio IDE](https://www.visualstudio.com/vs/?wt.mc_id=eventspg_16482_webpage_reactor).\\n* Support for a large range of inexpensive boards from several manufacturers including Discovery and Nucleo boards from [ST Microelectronics](http://www.st.com/content/st_com/en.html), [Quail](https://www.mikroe.com/quail) from Mikrobus, [Netduino](https://www.wildernesslabs.co/Netduino) from Wilderness Labs, [ESP32](https://en.wikipedia.org/wiki/ESP32) DevKit C, Texas Instruments [CC3220 Launchpad](https://www.ti.com/tool/CC3220SF-LAUNCHXL), [CC1352 Launchpad](https://www.ti.com/tool/LAUNCHXL-CC1352R1), and NXP [MIMXRT1060-EVK](https://www.nxp.com/part/MIMXRT1060-EVK#/).\\n* Easily expandable to other hardware and [RTOS](https://en.wikipedia.org/wiki/Real-time_operating_system) platforms. Currently targets [CMSIS](https://developer.arm.com/embedded/cmsis) and ESP32 FreeRTOS ports.\\n* Completely free and Open Source. From the core components to the utilities used for building, deploying, debugging, and IDE components.\\n\\n## Associated links:\\n\\n* Official .NET nanoFramework [site and blog](https://www.nanoframework.net/).\\n* [All our documentation](https://docs.nanoframework.net/) for API, classes, how to install, build your own images, architecture, and more!.\\n* THE place to go to get any code: our [Github .NET nanoFramework](https://github.com/nanoframework).\\n\\nFind us on Fridays all July! See you for another post on how to use GPIO, SPI, I2C, PWM, and more on .NET nanoFramework! And feedback is welcome."},{"id":"01-julyot-kickoff","metadata":{"permalink":"/blog/01-julyot-kickoff","source":"@site/blog/2022-07-01.md","title":"01: Welcome to #JulyOT!","description":"Welcome to Day 1 of #JulyOT!!","date":"2022-07-01T00:00:00.000Z","formattedDate":"July 1, 2022","tags":[{"label":"30days","permalink":"/blog/tags/30-days"},{"label":"iot","permalink":"/blog/tags/iot"},{"label":"kickoff","permalink":"/blog/tags/kickoff"},{"label":"iot4b","permalink":"/blog/tags/iot-4-b"},{"label":"embeddediot","permalink":"/blog/tags/embeddediot"},{"label":"aiatedge","permalink":"/blog/tags/aiatedge"},{"label":"iotcerts","permalink":"/blog/tags/iotcerts"}],"readingTime":2.145,"truncated":false,"authors":[{"name":"Jim Bennett","title":"Senior Regional Cloud Advocate @Microsoft","url":"https://github.com/jimbobbennett","imageURL":"https://github.com/jimbobbennett.png","key":"jimb"}],"frontMatter":{"slug":"01-julyot-kickoff","title":"01: Welcome to #JulyOT!","authors":["jimb"],"tags":["30days","iot","kickoff","iot4b","embeddediot","aiatedge","iotcerts"],"draft":false},"prevItem":{"title":"01: Getting started with nanoFramework!","permalink":"/blog/01-nano-framework"},"nextItem":{"title":"00: #JulyOT Is Coming!","permalink":"/blog/julyot-teaser"}},"content":"<head>\\n  <meta name=\\"twitter:url\\" content=\\"https://julyot.dev/blog/01-julyot-kickoff\\" />\\n  <meta name=\\"twitter:title\\" content=\\"Day 1 of #JulyOT!\\" />\\n  <meta name=\\"twitter:description\\" content=\\"Jumpstart 31 days of IoT celebrations with #JulyOT\\" />\\n  <meta name=\\"twitter:image\\" content=\\"https://julyot.dev/img/png/JulyOT-banner-1-welcome.png\\" />\\n  <meta name=\\"twitter:card\\" content=\\"summary_large_image\\" />\\n  <meta name=\\"twitter:creator\\" content=\\"@jimbobbennett\\" />\\n  <meta name=\\"twitter:site\\" content=\\"@AzureAdvocates\\" /> \\n  <link rel=\\"canonical\\" href=\\"https://julyot.dev/blog/01-julyot-kickoff\\" />\\n</head>\\n\\n> Welcome to Day 1 of **#JulyOT**!!\\n\\n![Welcome banner](/img/png/JulyOT-banner-1-welcome.png)\\n\\n#JulyOT 2022 is finally here, and we are excited to share 31 days of IoT goodness throughout this month.\\n\\nEach weekday we will be publishing one or more articles here all grouped into the following themes:\\n\\n* Beginners, makers, and students\\n* Embedded development\\n* AI on the Edge\\n* Learning and certifications\\n\\nSome will be full blog posts, others will direct you to videos, GitHub repos, other blogs, or code samples.\\n\\nCheck back here every day for more IoT goodness.\\n\\n## In this post\\n\\n* [**Upskill by joining the IoT Cloud skills challenge**](#iot-cloud-skills-challenge)\\n* [**Learn IoT with IoT For Beginners**](#iot-for-beginners)\\n* [**Digital swag**](#digital-swag)\\n\\n## IoT Cloud Skills Challenge\\n\\nWant to become a subject matter in the IoT Domain? Take the [Microsoft Cloud Skills Challenge](https://docs.microsoft.com/learn/challenges?id=261fd583-fa7b-4b1f-86eb-6a52b5468a23&wt.mc_id=eventspg_16482_webpage_reactor) - skill yourself up in 31 days and complete the Cloud Skills Challenge. This starts 1st July, so sign up now.\\n\\n<table>\\n<tr style={{border:\'0px\', \'background-color\':\'#00000000\'}}>\\n    <td style={{border:\'0px\', \'text-align\': \'center\'}}></td>\\n    <td style={{border:\'0px\', \'text-align\': \'center\'}}>\\n    <form action=\\"https://docs.microsoft.com/learn/challenges\\" target=\\"_blank\\">\\n        <input type=\\"submit\\" value=\\"Join the Cloud Skills Challenge\\" class=\\"clean-btn button button--primary margin-left--md\\"/>\\n        <input type=\\"hidden\\" name=\\"id\\" value=\\"261fd583-fa7b-4b1f-86eb-6a52b5468a23\\" /> \\n        <input type=\\"hidden\\" name=\\"wt.mc_id\\" value=\\"eventspg_16482_webpage_reactor\\" /> \\n    </form>\\n    </td>\\n    <td style={{border:\'0px\', \'text-align\': \'center\'}}></td>\\n</tr>\\n<tr style={{border:\'0px\', \'background-color\':\'#00000000\'}}>\\n    <td style={{border:\'0px\', \'text-align\': \'center\'}}><img src=\'https://docs.microsoft.com/en-us/media/learn/challenge/how_it_works_1.png?branch=main\' width=\'75%\' alt=\'A cuddly document and a purple yeti coding\'/></td>\\n    <td style={{border:\'0px\', \'text-align\': \'center\'}}><img src=\'https://docs.microsoft.com/en-us/media/learn/challenge/how_it_works_2.png?branch=main\' width=\'75%\' alt=\'A cuddly document and a purple yeti coding\'/></td>\\n    <td style={{border:\'0px\', \'text-align\': \'center\'}}><img src=\'https://docs.microsoft.com/en-us/media/learn/challenge/how_it_works_3.png?branch=main\' width=\'75%\' alt=\'A cuddly document and a purple yeti coding\'/></td>\\n</tr>\\n<tr style={{border:\'0px\', \'background-color\':\'#00000000\'}}>\\n    <td style={{border:\'0px\', \'vertical-align\':\'top\'}}><b>Compete</b><br/><br/>Benchmark your progress against friends and coworkers. It\'s always better when we learn together.</td>\\n    <td style={{border:\'0px\', \'vertical-align\':\'top\'}}><b>Learn</b><br/><br/>Increase your understanding with easy-to-read instruction and stay up on the bleeding-edge of technology.</td>\\n    <td style={{border:\'0px\', \'vertical-align\':\'top\'}}><b>Develop skills</b><br/><br/>By the end of the challenge, you will have marketable skills to better yourself and your career.</td>\\n</tr>\\n</table>\\n\\n## IoT For Beginners\\n\\n[IoT for beginners](https://aka.ms/iot-beginners) is a free, open source, 24-lesson IoT curriculum. The first lesson is live-streamed today from the Microsoft Reactor. Catch the recording on the Microsoft Reactor YouTube channel.\\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/1KVrBjSqS5s\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\nLearn more about IoT for Beginners on the official [IoT for Beginners GitHub repo](https://aka.ms/iot-beginners).\\n\\n## Digital swag\\n\\nCheck out [digital swag](/digitalswag) page for #JulyOT social media images, sticker templates, desktop backgrounds and video chat backgrounds."},{"id":"julyot-teaser","metadata":{"permalink":"/blog/julyot-teaser","source":"@site/blog/2022-06-23.md","title":"00: #JulyOT Is Coming!","description":"#JulyOT is coming!","date":"2022-06-23T00:00:00.000Z","formattedDate":"June 23, 2022","tags":[{"label":"30days","permalink":"/blog/tags/30-days"},{"label":"iot","permalink":"/blog/tags/iot"},{"label":"kickoff","permalink":"/blog/tags/kickoff"},{"label":"iot4b","permalink":"/blog/tags/iot-4-b"},{"label":"embeddediot","permalink":"/blog/tags/embeddediot"},{"label":"aiatedge","permalink":"/blog/tags/aiatedge"},{"label":"iotcerts","permalink":"/blog/tags/iotcerts"}],"readingTime":3.135,"truncated":false,"authors":[{"name":"Jim Bennett","title":"Senior Regional Cloud Advocate @Microsoft","url":"https://github.com/jimbobbennett","imageURL":"https://github.com/jimbobbennett.png","key":"jimb"}],"frontMatter":{"slug":"julyot-teaser","title":"00: #JulyOT Is Coming!","authors":["jimb"],"tags":["30days","iot","kickoff","iot4b","embeddediot","aiatedge","iotcerts"],"draft":false},"prevItem":{"title":"01: Welcome to #JulyOT!","permalink":"/blog/01-julyot-kickoff"}},"content":"<head>\\n  <meta name=\\"twitter:url\\" content=\\"https://julyot.dev/blog/julyot-teaser\\" />\\n  <meta name=\\"twitter:title\\" content=\\"Teaser: #JulyOT is Coming - Celebrate IoT All Month Long!\\" />\\n  <meta name=\\"twitter:description\\" content=\\"Jumpstart 31 days of IoT celebrations with #JulyOT\\" />\\n  <meta name=\\"twitter:image\\" content=\\"https://julyot.dev/img/png/julyot-kickoff-banner.png\\" />\\n  <meta name=\\"twitter:card\\" content=\\"summary_large_image\\" />\\n  <meta name=\\"twitter:creator\\" content=\\"@jim\\" />\\n  <meta name=\\"twitter:site\\" content=\\"@AzureAdvocates\\" /> \\n  <link rel=\\"canonical\\" href=\\"https://julyot.dev/blog/julyot-teaser\\" />\\n</head>\\n\\n> #JulyOT is coming!\\n\\n![Jumpstart 31 days of IoT celebrations with #JulyOT](../static/img/png/julyot-kickoff-banner.png)\\n\\nWe can\'t believe it\'s already the last week of June!! Wait - you know what that means right?\\n\\nClear up your cables, dust off your Raspberry Pi, dig our your Arduino board, fire up Visual Studio Code with PlatformIO, or the Arduino IDE, and login to the cloud! It\'s almost time to celebrate the Internet of Things, one thing at a time! It\'s almost #JulyOT!\\n\\n![Animated JulyOT logo](../static/img/gif/julyot-single-loop.gif)\\n\\nAs always #JulyOT will be kicking off on the 1st July, and every day we will be bringing you some awesome IoT content to get you excited about the Internet of Things.\\n\\nWe\'ll have a mix of live streams, videos, blog posts and code samples, all grouped into the following themes:\\n\\n* Beginners, makers, and students\\n* Embedded development\\n* AI on the Edge\\n* Learning and certifications\\n\\nWe invite everyone to build and share your creations throughout month as you gain knowledge from these and other resources throughout #JulyOT!  Be sure to spread the word about this initiative and your own projects by sharing the [hashtag #JulyOT on social media](https://twitter.com/hashtag/JulyOT)! We\'ll be sharing our favorite projects that we find.\\n\\nCheck back here daily to get all the latest goodness, or subscribe to [our RSS feed](https://julyot.dev/blog/rss.xml).\\n\\n## #JulyOT has a new home!\\n\\nIn the past #JulyOT has lived on the [Microsoft IoT Tech Community](https://techcommunity.microsoft.com/t5/internet-of-things-blog/bg-p/IoTBlog), but going forward we have a new home - here at [JulyOT.dev](https://julyOT.dev).\\n\\nAll the content for #JulyOT now lives [in GitHub](https://github.com/JulyOT/JulyOT). If you want to submit content then join us there, raise an issue with what you want to add, and we can help get your content shared with the world. For blog posts you can write the whole post here, or link out to your own blog. For all other content we can link to your GitHub repo, video or wherever!\\n\\n## #JulIoT\\n\\n#JulyOT is spreading it wings to Spanish! We are excited to bring you #JulIoT!\\n\\n![Julio T anumated logo](../static/img/gif/juliot.gif)\\n\\nWe have some live streams and blogs in Spanish lined up for you over the month. Check out the [live streams](/livestreams) page for a sneak peak of whats coming!\\n\\n## Our first event\\n\\nLaunching #JulyOT will be a series of IoT for Beginners live streams, based off the hugely popular [IoT for Beginners Curriculum](https://aka.ms/iot-beginners) that offers 24 free, open source lessons on IoT. We will be running the first 4 lessons as live streams, starting Friday 1st July at 9am Pacific Time.\\n\\n<a href=\'https://www.meetup.com/Microsoft-Reactor-Redmond/events/286453689/\'>\\n<img src=\'https://www.meetup.com/_next/image/?url=https%3A%2F%2Fsecure-content.meetupstatic.com%2Fimages%2Fclassic-events%2F504717110%2F676x380.webp&w=3840&q=75\' width=\'45%\' alt=\'IoT for beginners - Lesson 1, Introduction to IoT, Friday July 1st, 9am Pacific Time\'/>\\n</a>\\n\\nYou can register for this event on Meetup.com and get a reminder, or join us on YouTube.\\n\\n<a href=\\"https://www.meetup.com/Microsoft-Reactor-Redmond/events/286453689\\"><img src=\\"https://raw.githubusercontent.com/jimbobbennett/ColoredBadges/main/svg/social/meetup.svg\\" alt=\\"Meetup registration link\\"/></a>  <a href=\\"https://aka.ms/IoTforbeginnersLess1\\"><img src=\\"https://raw.githubusercontent.com/jimbobbennett/ColoredBadges/main/svg/streaming/youtube.svg\\" alt=\\"YouTube live stream link\\"/></a>\\n\\n## Microsoft Cloud Skills challenge\\n\\n![A cartoon racoon holding medals](../static/img/svg/image_medals.svg)\\n\\nAs part of #JulyOT we will be running a Microsoft Cloud Skills challenge, giving you a guided path to learn the Microsoft IoT stack, and compete in your learning against others. Check out the [Cloud Skills Challenge page](/skills) to sign up!\\n\\n## JulyOT digital swag\\n\\nThis year we also have [#JulyOT digital swag](/digitalswag)! Get a new desktop background, or a background for your favorite video chat tool like Microsoft Teams.\\n\\n## IoT resources\\n\\nFor more IoT resources, check out the [resources link](/resources) above. Whether you want videos to help you learn, or beginner tutorials, we have you covered."}]}')}}]);